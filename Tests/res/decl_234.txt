syn_fn_def(
  name: fn_symbol(cls_vars),
  params: [(type: type_ref(type_symbol(fndef)), var: var(fn_def))],
  local_fns: [],
  expr: fn_call(
    name: op_symbol(amp),
    params: [
      map_comp(
        sel_exprs: [
          and(
            left: accessor_test(expr: const_or_var(p), field: object(var)),
            right: and(
              left: accessor_test(expr: const_or_var(p), field: object(type)),
              right: membership(
                type: type_ref(type_symbol(clstype)),
                obj: accessor(expr: const_or_var(p), field: object(type))
              )
            )
          )
        ],
        source: [
          in_clause(
            src: fn_call(
              name: fn_symbol(set),
              params: [
                accessor(expr: const_or_var(fn_def), field: object(params))
              ],
              named_params: []
            ),
            ptrn: var_ptrn(name: var(p))
          )
        ],
        value_expr: fn_call(
          name: fn_symbol(length),
          params: [
            accessor(
              expr: accessor(expr: const_or_var(p), field: object(type)),
              field: object(in_types)
            )
          ],
          named_params: []
        ),
        key_expr: accessor(expr: const_or_var(p), field: object(var))
      ),
      map_comp(
        sel_exprs: [],
        source: [
          map_in_clause(
            src: accessor(expr: const_or_var(fn_def), field: object(named_params)),
            value_ptrn: var_ptrn(
              name: var(t),
              ptrn: type_ptrn(type_ref(type_symbol(clstype)))
            ),
            key_ptrn: var_ptrn(name: var(v))
          )
        ],
        value_expr: fn_call(
          name: fn_symbol(length),
          params: [accessor(expr: const_or_var(t), field: object(in_types))],
          named_params: []
        ),
        key_expr: const_or_var(v)
      )
    ],
    named_params: []
  ),
  res_type: map_type(
    value_type: type_ref(type_symbol(nznat)),
    key_type: type_ref(type_symbol(var))
  )
)
