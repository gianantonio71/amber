using_block(
  fn_defs: [
    syn_fn_def(
      name: fn_symbol(gen_fn_body),
      params: [(type: type_ref(type_symbol(expr)), var: var(expr))],
      local_fns: [],
      expr: do_expr(
        [
          assignment_stmt(
            value: fn_call(
              name: fn_symbol(lvar),
              params: [const_or_var(next_obj_var_id)],
              named_params: []
            ),
            var: var(fn_res_var)
          ),
          assignment_stmt(
            value: fn_call(
              name: fn_symbol(gen_eval_code),
              params: [const_or_var(expr), const_or_var(fn_res_var)],
              named_params: [
                syn_fn_def(
                  name: fn_symbol(next_obj_var_id),
                  params: [],
                  local_fns: [],
                  expr: fn_call(
                    name: op_symbol(plus),
                    params: [const_or_var(next_obj_var_id), object(1)],
                    named_params: []
                  )
                )
              ]
            ),
            var: var(code)
          ),
          return_stmt(
            fn_call(
              name: op_symbol(amp),
              params: [
                const_or_var(code),
                seq_expr(
                  head: [
                    fn_call(
                      name: fn_symbol(ret_val),
                      params: [const_or_var(fn_res_var)],
                      named_params: []
                    )
                  ]
                )
              ],
              named_params: []
            )
          )
        ]
      ),
      res_type: seq_type(nonempty: true, elem_type: type_ref(type_symbol(instr)))
    ),
    syn_fn_def(
      name: fn_symbol(gen_eval_info),
      params: [
        (type: type_ref(type_symbol(expr)), var: var(expr)),
        (type: type_ref(type_symbol(objvar)), var: var(var))
      ],
      local_fns: [],
      expr: match_expr(
        cases: [
          case(
            expr: map_expr(
              {
                (value: const_or_var(expr), key: object(expr)),
                (value: object(false), key: object(var_used)),
                (value: seq_expr(head: []), key: object(eval_code)),
                (value: seq_expr(head: []), key: object(cleanup_code)),
                (value: seq_expr(head: []), key: object(add_ref_eval_code))
              }
            ),
            patterns: [type_ptrn(type_ref(type_symbol(leafobj)))]
          ),
          case(
            expr: map_expr(
              {
                (value: const_or_var(expr), key: object(expr)),
                (value: object(false), key: object(var_used)),
                (value: seq_expr(head: []), key: object(eval_code)),
                (value: seq_expr(head: []), key: object(cleanup_code)),
                (
                  value: seq_expr(
                    head: [
                      fn_call(
                        name: fn_symbol(add_ref),
                        params: [const_or_var(expr)],
                        named_params: []
                      )
                    ]
                  ),
                  key: object(add_ref_eval_code)
                )
              }
            ),
            patterns: [type_ptrn(type_ref(type_symbol(var)))]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_code),
                    params: [const_or_var(expr), const_or_var(var)],
                    named_params: []
                  ),
                  var: var(eval_code)
                ),
                return_stmt(
                  map_expr(
                    {
                      (value: const_or_var(var), key: object(expr)),
                      (value: object(true), key: object(var_used)),
                      (value: const_or_var(eval_code), key: object(eval_code)),
                      (
                        value: const_or_var(eval_code),
                        key: object(add_ref_eval_code)
                      ),
                      (
                        value: seq_expr(
                          head: [
                            fn_call(
                              name: fn_symbol(release),
                              params: [const_or_var(var)],
                              named_params: []
                            )
                          ]
                        ),
                        key: object(cleanup_code)
                      )
                    }
                  )
                )
              ]
            ),
            patterns: [type_ptrn(type_any)]
          )
        ],
        exprs: [fn_par(0), fn_par(1)]
      ),
      res_type: tuple_type(
        {
          (
            type: type_ref(type_symbol(atomicexpr)),
            optional: false,
            label: object(expr)
          ),
          (
            type: type_ref(type_symbol(bool)),
            optional: false,
            label: object(var_used)
          ),
          (
            type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr))),
            optional: false,
            label: object(eval_code)
          ),
          (
            type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr))),
            optional: false,
            label: object(cleanup_code)
          ),
          (
            type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr))),
            optional: false,
            label: object(add_ref_eval_code)
          )
        }
      )
    ),
    syn_fn_def(
      name: fn_symbol(gen_eval_info),
      params: [(type: type_ref(type_symbol(expr)), var: var(expr))],
      local_fns: [],
      expr: do_expr(
        [
          assignment_stmt(
            value: fn_call(
              name: fn_symbol(lvar),
              params: [const_or_var(next_obj_var_id)],
              named_params: []
            ),
            var: var(var)
          ),
          assignment_stmt(
            value: fn_call(
              name: fn_symbol(gen_eval_info),
              params: [const_or_var(expr), const_or_var(var)],
              named_params: [
                syn_fn_def(
                  name: fn_symbol(next_obj_var_id),
                  params: [],
                  local_fns: [],
                  expr: fn_call(
                    name: op_symbol(plus),
                    params: [const_or_var(next_obj_var_id), object(1)],
                    named_params: []
                  )
                )
              ]
            ),
            var: var(info)
          ),
          return_stmt(
            fn_call(
              name: op_symbol(amp),
              params: [
                const_or_var(info),
                map_expr(
                  {
                    (
                      value: fn_call(
                        name: op_symbol(plus),
                        params: [
                          const_or_var(next_obj_var_id),
                          if_expr(
                            else: object(0),
                            branches: [
                              (
                                expr: object(1),
                                cond: accessor(expr: const_or_var(info), field: object(var_used))
                              )
                            ]
                          )
                        ],
                        named_params: []
                      ),
                      key: object(next_var_id)
                    )
                  }
                )
              ],
              named_params: []
            )
          )
        ]
      ),
      res_type: tuple_type(
        {
          (
            type: type_ref(type_symbol(atomicexpr)),
            optional: false,
            label: object(expr)
          ),
          (
            type: type_ref(type_symbol(bool)),
            optional: false,
            label: object(var_used)
          ),
          (
            type: type_ref(type_symbol(nat)),
            optional: false,
            label: object(next_var_id)
          ),
          (
            type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr))),
            optional: false,
            label: object(eval_code)
          ),
          (
            type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr))),
            optional: false,
            label: object(cleanup_code)
          ),
          (
            type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr))),
            optional: false,
            label: object(add_ref_eval_code)
          )
        }
      )
    ),
    syn_fn_def(
      name: fn_symbol(gen_eval_info),
      params: [
        (
          type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(expr))),
          var: var(exprs)
        )
      ],
      local_fns: [],
      expr: do_expr(
        [
          assignment_stmt(value: seq_expr(head: []), var: var(eval_code)),
          assignment_stmt(value: seq_expr(head: []), var: var(cleanup_code)),
          assignment_stmt(value: seq_expr(head: []), var: var(add_ref_eval_code)),
          assignment_stmt(value: seq_expr(head: []), var: var(res_exprs)),
          assignment_stmt(
            value: const_or_var(next_obj_var_id),
            var: var(next_var_id)
          ),
          for_stmt(
            body: [
              assignment_stmt(
                value: fn_call(
                  name: fn_symbol(gen_eval_info),
                  params: [const_or_var(e)],
                  named_params: [
                    syn_fn_def(
                      name: fn_symbol(next_obj_var_id),
                      params: [],
                      local_fns: [],
                      expr: const_or_var(next_var_id)
                    )
                  ]
                ),
                var: var(info)
              ),
              assignment_stmt(
                value: fn_call(
                  name: op_symbol(amp),
                  params: [
                    const_or_var(eval_code),
                    accessor(expr: const_or_var(info), field: object(eval_code))
                  ],
                  named_params: []
                ),
                var: var(eval_code)
              ),
              assignment_stmt(
                value: fn_call(
                  name: op_symbol(amp),
                  params: [
                    accessor(expr: const_or_var(info), field: object(cleanup_code)),
                    const_or_var(cleanup_code)
                  ],
                  named_params: []
                ),
                var: var(cleanup_code)
              ),
              assignment_stmt(
                value: fn_call(
                  name: op_symbol(amp),
                  params: [
                    const_or_var(add_ref_eval_code),
                    accessor(expr: const_or_var(info), field: object(add_ref_eval_code))
                  ],
                  named_params: []
                ),
                var: var(add_ref_eval_code)
              ),
              assignment_stmt(
                value: fn_call(
                  name: op_symbol(amp),
                  params: [
                    const_or_var(res_exprs),
                    seq_expr(
                      head: [accessor(expr: const_or_var(info), field: object(expr))]
                    )
                  ],
                  named_params: []
                ),
                var: var(res_exprs)
              ),
              assignment_stmt(
                value: accessor(expr: const_or_var(info), field: object(next_var_id)),
                var: var(next_var_id)
              )
            ],
            loops: [seq_iter(var: var(e), values: const_or_var(exprs))]
          ),
          return_stmt(
            map_expr(
              {
                (value: const_or_var(res_exprs), key: object(exprs)),
                (value: const_or_var(eval_code), key: object(eval_code)),
                (
                  value: const_or_var(cleanup_code),
                  key: object(cleanup_code)
                ),
                (
                  value: const_or_var(add_ref_eval_code),
                  key: object(add_ref_eval_code)
                ),
                (value: const_or_var(next_var_id), key: object(next_var_id))
              }
            )
          )
        ]
      ),
      res_type: tuple_type(
        {
          (
            type: seq_type(
              nonempty: false,
              elem_type: type_ref(type_symbol(atomicexpr))
            ),
            optional: false,
            label: object(exprs)
          ),
          (
            type: type_ref(type_symbol(nat)),
            optional: false,
            label: object(next_var_id)
          ),
          (
            type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr))),
            optional: false,
            label: object(eval_code)
          ),
          (
            type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr))),
            optional: false,
            label: object(cleanup_code)
          ),
          (
            type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr))),
            optional: false,
            label: object(add_ref_eval_code)
          )
        }
      )
    ),
    syn_fn_def(
      name: fn_symbol(gen_vector_eval_info),
      params: [
        (
          type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(subexpr))),
          var: var(exprs)
        )
      ],
      local_fns: [
        syn_fn_def(
          name: fn_symbol(gen_vector_eval_code),
          params: [
            (
              type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(subexpr))),
              var: var(exprs)
            ),
            (type: type_ref(type_symbol(vecvar)), var: var(elems_var)),
            (type: type_ref(type_symbol(intvar)), var: var(count_var))
          ],
          local_fns: [],
          expr: do_expr(
            [
              assignment_stmt(
                value: fn_call(
                  name: fn_symbol(evar),
                  params: [
                    accessor(expr: const_or_var(elems_var), field: object(id)),
                    const_or_var(count_var)
                  ],
                  named_params: []
                ),
                var: var(curr_slot_var)
              ),
              assignment_stmt(
                value: fn_call(
                  name: fn_symbol(lvar),
                  params: [const_or_var(next_obj_var_id)],
                  named_params: []
                ),
                var: var(cond_var)
              ),
              assignment_stmt(
                value: seq_expr(
                  head: [
                    fn_call(
                      name: fn_symbol(set_ivar),
                      params: [const_or_var(count_var), object(0)],
                      named_params: []
                    )
                  ]
                ),
                var: var(code)
              ),
              for_stmt(
                body: [
                  if_stmt(
                    else: [
                      assert_stmt(
                        membership(
                          type: type_ref(type_symbol(condexpr)),
                          obj: const_or_var(e)
                        )
                      ),
                      assignment_stmt(
                        value: fn_call(
                          name: fn_symbol(gen_eval_info),
                          params: [
                            accessor(expr: const_or_var(e), field: object(cond)),
                            const_or_var(cond_var)
                          ],
                          named_params: [
                            syn_fn_def(
                              name: fn_symbol(next_obj_var_id),
                              params: [],
                              local_fns: [],
                              expr: fn_call(
                                name: op_symbol(plus),
                                params: [const_or_var(next_obj_var_id), object(1)],
                                named_params: []
                              )
                            )
                          ]
                        ),
                        var: var(cond_eval_info)
                      ),
                      assignment_stmt(
                        value: fn_call(
                          name: fn_symbol(gen_eval_code),
                          params: [
                            accessor(expr: const_or_var(e), field: object(expr)),
                            const_or_var(curr_slot_var)
                          ],
                          named_params: []
                        ),
                        var: var(expr_eval_code)
                      ),
                      assignment_stmt(
                        value: fn_call(
                          name: op_symbol(amp),
                          params: [
                            accessor(
                              expr: const_or_var(cond_eval_info),
                              field: object(eval_code)
                            ),
                            seq_expr(
                              head: [
                                fn_call(
                                  name: fn_symbol(check),
                                  params: [
                                    fn_call(
                                      name: fn_symbol(is_bool),
                                      params: [
                                        accessor(expr: const_or_var(cond_eval_info), field: object(expr))
                                      ],
                                      named_params: []
                                    )
                                  ],
                                  named_params: []
                                ),
                                fn_call(
                                  name: fn_symbol(do_if),
                                  params: [
                                    fn_call(
                                      name: fn_symbol(is_true),
                                      params: [
                                        accessor(expr: const_or_var(cond_eval_info), field: object(expr))
                                      ],
                                      named_params: []
                                    ),
                                    fn_call(
                                      name: op_symbol(amp),
                                      params: [
                                        const_or_var(expr_eval_code),
                                        seq_expr(
                                          head: [
                                            fn_call(
                                              name: fn_symbol(increment),
                                              params: [const_or_var(count_var)],
                                              named_params: []
                                            )
                                          ]
                                        )
                                      ],
                                      named_params: []
                                    )
                                  ],
                                  named_params: []
                                )
                              ]
                            )
                          ],
                          named_params: []
                        ),
                        var: var(new_code)
                      )
                    ],
                    branches: [
                      (
                        cond: membership(type: type_ref(type_symbol(expr)), obj: const_or_var(e)),
                        body: [
                          assignment_stmt(
                            value: fn_call(
                              name: op_symbol(amp),
                              params: [
                                fn_call(
                                  name: fn_symbol(gen_eval_code),
                                  params: [const_or_var(e), const_or_var(curr_slot_var)],
                                  named_params: []
                                ),
                                seq_expr(
                                  head: [
                                    fn_call(
                                      name: fn_symbol(increment),
                                      params: [const_or_var(count_var)],
                                      named_params: []
                                    )
                                  ]
                                )
                              ],
                              named_params: []
                            ),
                            var: var(new_code)
                          )
                        ]
                      )
                    ]
                  ),
                  assignment_stmt(
                    value: fn_call(
                      name: op_symbol(amp),
                      params: [const_or_var(code), const_or_var(new_code)],
                      named_params: []
                    ),
                    var: var(code)
                  )
                ],
                loops: [seq_iter(var: var(e), values: const_or_var(exprs))]
              ),
              return_stmt(const_or_var(code))
            ]
          ),
          res_type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr)))
        )
      ],
      expr: do_expr(
        [
          assignment_stmt(
            value: fn_call(
              name: fn_symbol(vvar),
              params: [
                const_or_var(next_vector_var_id),
                fn_call(
                  name: fn_symbol(length),
                  params: [const_or_var(exprs)],
                  named_params: []
                )
              ],
              named_params: []
            ),
            var: var(elems_var)
          ),
          assignment_stmt(
            value: fn_call(
              name: fn_symbol(ivar),
              params: [const_or_var(next_int_var_id)],
              named_params: []
            ),
            var: var(count_var)
          ),
          assignment_stmt(
            value: fn_call(
              name: fn_symbol(gen_vector_eval_code),
              params: [
                const_or_var(exprs),
                const_or_var(elems_var),
                const_or_var(count_var)
              ],
              named_params: [
                syn_fn_def(
                  name: fn_symbol(next_vector_var_id),
                  params: [],
                  local_fns: [],
                  expr: fn_call(
                    name: op_symbol(plus),
                    params: [const_or_var(next_vector_var_id), object(1)],
                    named_params: []
                  )
                ),
                syn_fn_def(
                  name: fn_symbol(next_int_var_id),
                  params: [],
                  local_fns: [],
                  expr: fn_call(
                    name: op_symbol(plus),
                    params: [const_or_var(next_int_var_id), object(1)],
                    named_params: []
                  )
                )
              ]
            ),
            var: var(code)
          ),
          return_stmt(
            map_expr(
              {
                (value: const_or_var(code), key: object(code)),
                (value: const_or_var(count_var), key: object(count_var)),
                (value: const_or_var(elems_var), key: object(vect_var))
              }
            )
          )
        ]
      ),
      res_type: tuple_type(
        {
          (
            type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr))),
            optional: false,
            label: object(code)
          ),
          (
            type: type_ref(type_symbol(intvar)),
            optional: false,
            label: object(count_var)
          ),
          (
            type: type_ref(type_symbol(vecvar)),
            optional: false,
            label: object(vect_var)
          )
        }
      )
    ),
    syn_fn_def(
      name: fn_symbol(sort_exprs_first),
      params: [
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(subexpr))),
          var: var(exprs)
        )
      ],
      local_fns: [],
      expr: do_expr(
        [
          assignment_stmt(
            value: set_comp(
              sel_exprs: [],
              source: [
                in_clause(
                  src: const_or_var(exprs),
                  ptrn: var_ptrn(name: var(e), ptrn: type_ptrn(type_ref(type_symbol(expr))))
                )
              ],
              expr: const_or_var(e)
            ),
            var: var(pure_exprs)
          ),
          assignment_stmt(
            value: fn_call(
              name: op_symbol(minus),
              params: [const_or_var(exprs), const_or_var(pure_exprs)],
              named_params: []
            ),
            var: var(cond_exprs)
          ),
          return_stmt(
            fn_call(
              name: op_symbol(amp),
              params: [
                fn_call(
                  name: fn_symbol(rand_sort),
                  params: [const_or_var(pure_exprs)],
                  named_params: []
                ),
                fn_call(
                  name: fn_symbol(rand_sort),
                  params: [const_or_var(cond_exprs)],
                  named_params: []
                )
              ],
              named_params: []
            )
          )
        ]
      ),
      res_type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(subexpr)))
    ),
    syn_fn_def(
      name: fn_symbol(gen_eval_code),
      params: [
        (type: type_ref(type_symbol(builtin)), var: var(name)),
        (
          type: seq_type(
            nonempty: false,
            elem_type: type_ref(type_symbol(atomicexpr))
          ),
          var: var(params)
        ),
        (type: type_ref(type_symbol(objvar)), var: var(res_var))
      ],
      local_fns: [
        syn_fn_def(
          name: fn_symbol(gen_eval_instr),
          params: [
            (type: type_ref(type_symbol(builtin)), var: var(name)),
            (
              type: seq_type(
                nonempty: false,
                elem_type: type_ref(type_symbol(atomicexpr))
              ),
              var: var(ps)
            ),
            (type: type_ref(type_symbol(objvar)), var: var(res_var))
          ],
          local_fns: [],
          expr: match_expr(
            cases: [
              case(
                expr: fn_call(
                  name: fn_symbol(get_seq_slice),
                  params: [
                    const_or_var(res_var),
                    fn_call(
                      name: op_symbol(brackets),
                      params: [const_or_var(ps), object(0)],
                      named_params: []
                    ),
                    fn_call(
                      name: fn_symbol(get_int_val),
                      params: [
                        fn_call(
                          name: op_symbol(brackets),
                          params: [const_or_var(ps), object(1)],
                          named_params: []
                        )
                      ],
                      named_params: []
                    ),
                    fn_call(
                      name: fn_symbol(get_int_val),
                      params: [
                        fn_call(
                          name: op_symbol(brackets),
                          params: [const_or_var(ps), object(2)],
                          named_params: []
                        )
                      ],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(slice))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(join_seqs),
                  params: [
                    const_or_var(res_var),
                    fn_call(
                      name: op_symbol(brackets),
                      params: [const_or_var(ps), object(0)],
                      named_params: []
                    ),
                    fn_call(
                      name: op_symbol(brackets),
                      params: [const_or_var(ps), object(1)],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(cat))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(rev_seq),
                  params: [
                    const_or_var(res_var),
                    fn_call(
                      name: op_symbol(brackets),
                      params: [const_or_var(ps), object(0)],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(rev))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(seq_to_set),
                  params: [
                    const_or_var(res_var),
                    fn_call(
                      name: op_symbol(brackets),
                      params: [const_or_var(ps), object(0)],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(set))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(get_at),
                  params: [
                    const_or_var(res_var),
                    fn_call(
                      name: op_symbol(brackets),
                      params: [const_or_var(ps), object(0)],
                      named_params: []
                    ),
                    fn_call(
                      name: fn_symbol(get_int_val),
                      params: [
                        fn_call(
                          name: op_symbol(brackets),
                          params: [const_or_var(ps), object(1)],
                          named_params: []
                        )
                      ],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(at))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(seq_to_mset),
                  params: [
                    const_or_var(res_var),
                    fn_call(
                      name: op_symbol(brackets),
                      params: [const_or_var(ps), object(0)],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(mset))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(internal_sort),
                  params: [
                    const_or_var(res_var),
                    fn_call(
                      name: op_symbol(brackets),
                      params: [const_or_var(ps), object(0)],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(isort))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(list_to_seq),
                  params: [
                    const_or_var(res_var),
                    fn_call(
                      name: op_symbol(brackets),
                      params: [const_or_var(ps), object(0)],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(list_to_seq))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(set_var),
                  params: [
                    const_or_var(res_var),
                    fn_call(
                      name: fn_symbol(gen_eval_expr),
                      params: [const_or_var(name), const_or_var(ps)],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [type_ptrn(type_any)]
              )
            ],
            exprs: [fn_par(0), fn_par(1), fn_par(2)]
          ),
          res_type: type_ref(type_symbol(instr))
        ),
        syn_fn_def(
          name: fn_symbol(gen_eval_expr),
          params: [
            (type: type_ref(type_symbol(builtin)), var: var(name)),
            (
              type: seq_type(
                nonempty: false,
                elem_type: type_ref(type_symbol(atomicexpr))
              ),
              var: var(ps)
            )
          ],
          local_fns: [],
          expr: match_expr(
            cases: [
              case(
                expr: fn_call(
                  name: fn_symbol(to_str),
                  params: [
                    fn_call(
                      name: op_symbol(brackets),
                      params: [const_or_var(ps), object(0)],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(str))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(to_symb),
                  params: [
                    fn_call(
                      name: op_symbol(brackets),
                      params: [const_or_var(ps), object(0)],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(symb))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(to_obj),
                  params: [
                    fn_call(
                      name: fn_symbol(minus),
                      params: [
                        fn_call(
                          name: fn_symbol(get_int_val),
                          params: [
                            fn_call(
                              name: op_symbol(brackets),
                              params: [const_or_var(ps), object(0)],
                              named_params: []
                            )
                          ],
                          named_params: []
                        )
                      ],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(neg))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(to_obj),
                  params: [
                    fn_call(
                      name: fn_symbol(add),
                      params: [
                        fn_call(
                          name: fn_symbol(get_int_val),
                          params: [
                            fn_call(
                              name: op_symbol(brackets),
                              params: [const_or_var(ps), object(0)],
                              named_params: []
                            )
                          ],
                          named_params: []
                        ),
                        fn_call(
                          name: fn_symbol(get_int_val),
                          params: [
                            fn_call(
                              name: op_symbol(brackets),
                              params: [const_or_var(ps), object(1)],
                              named_params: []
                            )
                          ],
                          named_params: []
                        )
                      ],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(add))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(to_obj),
                  params: [
                    fn_call(
                      name: fn_symbol(mult),
                      params: [
                        fn_call(
                          name: fn_symbol(get_int_val),
                          params: [
                            fn_call(
                              name: op_symbol(brackets),
                              params: [const_or_var(ps), object(0)],
                              named_params: []
                            )
                          ],
                          named_params: []
                        ),
                        fn_call(
                          name: fn_symbol(get_int_val),
                          params: [
                            fn_call(
                              name: op_symbol(brackets),
                              params: [const_or_var(ps), object(1)],
                              named_params: []
                            )
                          ],
                          named_params: []
                        )
                      ],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(mult))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(to_obj),
                  params: [const_or_var(unique_int)],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(counter))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(to_obj),
                  params: [
                    fn_call(
                      name: fn_symbol(get_seq_len),
                      params: [
                        fn_call(
                          name: op_symbol(brackets),
                          params: [const_or_var(ps), object(0)],
                          named_params: []
                        )
                      ],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [obj_ptrn(object(len))]
              )
            ],
            exprs: [fn_par(0), fn_par(1)]
          ),
          res_type: type_ref(type_symbol(objexpr))
        )
      ],
      expr: do_expr(
        [
          return_stmt(
            seq_expr(
              head: [
                fn_call(
                  name: fn_symbol(gen_eval_instr),
                  params: [
                    const_or_var(name),
                    const_or_var(params),
                    const_or_var(res_var)
                  ],
                  named_params: []
                )
              ]
            )
          )
        ]
      ),
      res_type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr)))
    ),
    syn_fn_def(
      name: fn_symbol(gen_eval_code),
      params: [
        (type: type_ref(type_symbol(expr)), var: var(expr)),
        (type: type_ref(type_symbol(objvar)), var: var(res_var))
      ],
      local_fns: [],
      expr: match_expr(
        cases: [
          case(
            expr: seq_expr(
              head: [
                fn_call(
                  name: fn_symbol(set_var),
                  params: [const_or_var(res_var), const_or_var(expr)],
                  named_params: []
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(object)))
            ]
          ),
          case(
            expr: seq_expr(
              head: [
                fn_call(
                  name: fn_symbol(set_var),
                  params: [const_or_var(res_var), const_or_var(expr)],
                  named_params: []
                ),
                fn_call(
                  name: fn_symbol(add_ref),
                  params: [const_or_var(res_var)],
                  named_params: []
                )
              ]
            ),
            patterns: [type_ptrn(type_ref(type_symbol(var)))]
          ),
          case(
            expr: seq_expr(
              head: [
                fn_call(
                  name: fn_symbol(execute_block),
                  params: [
                    fn_call(
                      name: fn_symbol(gen_code),
                      params: [const_or_var(ss), const_or_var(res_var)],
                      named_params: []
                    )
                  ],
                  named_params: []
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(ss)),
                tag: obj_ptrn(object(do_expr))
              )
            ]
          ),
          case(
            expr: fn_call(
              name: fn_symbol(gen_eval_code),
              params: [
                fn_call(
                  name: fn_symbol(simplify),
                  params: [const_or_var(expr)],
                  named_params: []
                ),
                const_or_var(res_var)
              ],
              named_params: []
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(select_expr))
              )
            ]
          ),
          case(
            expr: fn_call(
              name: fn_symbol(gen_eval_code),
              params: [
                fn_call(
                  name: fn_symbol(simplify),
                  params: [const_or_var(expr)],
                  named_params: []
                ),
                const_or_var(res_var)
              ],
              named_params: []
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(replace_expr))
              )
            ]
          ),
          case(
            expr: fn_call(
              name: op_symbol(amp),
              params: [
                fn_call(
                  name: fn_symbol(gen_eval_code),
                  params: [
                    accessor(expr: const_or_var(expr), field: object(left)),
                    const_or_var(res_var)
                  ],
                  named_params: []
                ),
                seq_expr(
                  head: [
                    fn_call(
                      name: fn_symbol(check),
                      params: [
                        fn_call(
                          name: fn_symbol(is_bool),
                          params: [const_or_var(res_var)],
                          named_params: []
                        )
                      ],
                      named_params: []
                    ),
                    fn_call(
                      name: fn_symbol(do_if),
                      params: [
                        fn_call(
                          name: fn_symbol(is_true),
                          params: [const_or_var(res_var)],
                          named_params: []
                        ),
                        fn_call(
                          name: op_symbol(amp),
                          params: [
                            fn_call(
                              name: fn_symbol(gen_eval_code),
                              params: [
                                accessor(expr: const_or_var(expr), field: object(right)),
                                const_or_var(res_var)
                              ],
                              named_params: []
                            ),
                            seq_expr(
                              head: [
                                fn_call(
                                  name: fn_symbol(check_is_bool),
                                  params: [const_or_var(res_var)],
                                  named_params: []
                                )
                              ]
                            )
                          ],
                          named_params: []
                        )
                      ],
                      named_params: []
                    )
                  ]
                )
              ],
              named_params: []
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(and_expr)))
            ]
          ),
          case(
            expr: fn_call(
              name: op_symbol(amp),
              params: [
                fn_call(
                  name: fn_symbol(gen_eval_code),
                  params: [
                    accessor(expr: const_or_var(expr), field: object(left)),
                    const_or_var(res_var)
                  ],
                  named_params: []
                ),
                seq_expr(
                  head: [
                    fn_call(
                      name: fn_symbol(check),
                      params: [
                        fn_call(
                          name: fn_symbol(is_bool),
                          params: [const_or_var(res_var)],
                          named_params: []
                        )
                      ],
                      named_params: []
                    ),
                    fn_call(
                      name: fn_symbol(do_if),
                      params: [
                        fn_call(
                          name: fn_symbol(is_false),
                          params: [const_or_var(res_var)],
                          named_params: []
                        ),
                        fn_call(
                          name: op_symbol(amp),
                          params: [
                            fn_call(
                              name: fn_symbol(gen_eval_code),
                              params: [
                                accessor(expr: const_or_var(expr), field: object(right)),
                                const_or_var(res_var)
                              ],
                              named_params: []
                            ),
                            seq_expr(
                              head: [
                                fn_call(
                                  name: fn_symbol(check),
                                  params: [
                                    fn_call(
                                      name: fn_symbol(is_bool),
                                      params: [const_or_var(res_var)],
                                      named_params: []
                                    )
                                  ],
                                  named_params: []
                                )
                              ]
                            )
                          ],
                          named_params: []
                        )
                      ],
                      named_params: []
                    )
                  ]
                )
              ],
              named_params: []
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(or_expr)))
            ]
          ),
          case(
            expr: fn_call(
              name: op_symbol(amp),
              params: [
                fn_call(
                  name: fn_symbol(gen_eval_code),
                  params: [const_or_var(e), const_or_var(res_var)],
                  named_params: []
                ),
                seq_expr(
                  head: [
                    fn_call(
                      name: fn_symbol(check),
                      params: [
                        fn_call(
                          name: fn_symbol(is_bool),
                          params: [const_or_var(res_var)],
                          named_params: []
                        )
                      ],
                      named_params: []
                    ),
                    fn_call(
                      name: fn_symbol(branch),
                      params: [
                        fn_call(
                          name: fn_symbol(is_true),
                          params: [const_or_var(res_var)],
                          named_params: []
                        ),
                        seq_expr(
                          head: [
                            fn_call(
                              name: fn_symbol(set_var),
                              params: [const_or_var(res_var), const_or_var(obj_false)],
                              named_params: []
                            )
                          ]
                        ),
                        seq_expr(
                          head: [
                            fn_call(
                              name: fn_symbol(set_var),
                              params: [const_or_var(res_var), const_or_var(obj_true)],
                              named_params: []
                            )
                          ]
                        )
                      ],
                      named_params: []
                    )
                  ]
                )
              ],
              named_params: []
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(e)),
                tag: obj_ptrn(object(not_expr))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                if_stmt(
                  else: [],
                  branches: [
                    (
                      cond: eq(left: const_or_var(es), right: set_expr({})),
                      body: [
                        return_stmt(
                          seq_expr(
                            head: [
                              fn_call(
                                name: fn_symbol(set_var),
                                params: [const_or_var(res_var), const_or_var(empty_set)],
                                named_params: []
                              )
                            ]
                          )
                        )
                      ]
                    )
                  ]
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_vector_eval_info),
                    params: [
                      fn_call(
                        name: fn_symbol(sort_exprs_first),
                        params: [const_or_var(es)],
                        named_params: []
                      )
                    ],
                    named_params: []
                  ),
                  var: var(info)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      accessor(expr: const_or_var(info), field: object(code)),
                      seq_expr(
                        head: [
                          fn_call(
                            name: fn_symbol(mk_set),
                            params: [
                              const_or_var(res_var),
                              accessor(expr: const_or_var(info), field: object(vect_var)),
                              accessor(expr: const_or_var(info), field: object(count_var))
                            ],
                            named_params: []
                          )
                        ]
                      )
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(es)),
                tag: obj_ptrn(object(set_expr))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                if_stmt(
                  else: [
                    assignment_stmt(value: const_or_var(res_var), var: var(head_res_var)),
                    assignment_stmt(
                      value: const_or_var(next_obj_var_id),
                      var: var(new_obj_var_id)
                    )
                  ],
                  branches: [
                    (
                      cond: accessor_test(expr: const_or_var(expr), field: object(tail)),
                      body: [
                        assignment_stmt(
                          value: fn_call(
                            name: fn_symbol(lvar),
                            params: [const_or_var(next_obj_var_id)],
                            named_params: []
                          ),
                          var: var(head_res_var)
                        ),
                        assignment_stmt(
                          value: fn_call(
                            name: op_symbol(plus),
                            params: [const_or_var(next_obj_var_id), object(1)],
                            named_params: []
                          ),
                          var: var(new_obj_var_id)
                        )
                      ]
                    )
                  ]
                ),
                if_stmt(
                  else: [
                    assignment_stmt(
                      value: seq_expr(
                        head: [
                          fn_call(
                            name: fn_symbol(set_var),
                            params: [const_or_var(head_res_var), const_or_var(empty_seq)],
                            named_params: []
                          )
                        ]
                      ),
                      var: var(code)
                    )
                  ],
                  branches: [
                    (
                      cond: neq(
                        left: accessor(expr: const_or_var(expr), field: object(head)),
                        right: seq_expr(head: [])
                      ),
                      body: [
                        assignment_stmt(
                          value: fn_call(
                            name: fn_symbol(gen_vector_eval_info),
                            params: [accessor(expr: const_or_var(expr), field: object(head))],
                            named_params: [
                              syn_fn_def(
                                name: fn_symbol(next_obj_var_id),
                                params: [],
                                local_fns: [],
                                expr: const_or_var(new_obj_var_id)
                              )
                            ]
                          ),
                          var: var(info)
                        ),
                        assignment_stmt(
                          value: fn_call(
                            name: op_symbol(amp),
                            params: [
                              accessor(expr: const_or_var(info), field: object(code)),
                              seq_expr(
                                head: [
                                  fn_call(
                                    name: fn_symbol(mk_seq),
                                    params: [
                                      const_or_var(head_res_var),
                                      accessor(expr: const_or_var(info), field: object(vect_var)),
                                      accessor(expr: const_or_var(info), field: object(count_var))
                                    ],
                                    named_params: []
                                  )
                                ]
                              )
                            ],
                            named_params: []
                          ),
                          var: var(code)
                        )
                      ]
                    )
                  ]
                ),
                if_stmt(
                  else: [],
                  branches: [
                    (
                      cond: accessor_test(expr: const_or_var(expr), field: object(tail)),
                      body: [
                        assignment_stmt(
                          value: fn_call(
                            name: fn_symbol(gen_eval_info),
                            params: [accessor(expr: const_or_var(expr), field: object(tail))],
                            named_params: [
                              syn_fn_def(
                                name: fn_symbol(next_obj_var_id),
                                params: [],
                                local_fns: [],
                                expr: const_or_var(new_obj_var_id)
                              )
                            ]
                          ),
                          var: var(info)
                        ),
                        assignment_stmt(
                          value: fn_call(
                            name: op_symbol(amp),
                            params: [
                              fn_call(
                                name: op_symbol(amp),
                                params: [
                                  const_or_var(code),
                                  accessor(expr: const_or_var(info), field: object(eval_code))
                                ],
                                named_params: []
                              ),
                              seq_expr(
                                head: [
                                  fn_call(
                                    name: fn_symbol(join_seqs),
                                    params: [
                                      const_or_var(res_var),
                                      const_or_var(head_res_var),
                                      accessor(expr: const_or_var(info), field: object(expr))
                                    ],
                                    named_params: []
                                  ),
                                  fn_call(
                                    name: fn_symbol(release),
                                    params: [const_or_var(head_res_var)],
                                    named_params: []
                                  )
                                ]
                              )
                            ],
                            named_params: []
                          ),
                          var: var(code)
                        )
                      ]
                    )
                  ]
                ),
                return_stmt(const_or_var(code))
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(seq_expr)))
            ]
          ),
          case(
            expr: do_expr(
              [
                if_stmt(
                  else: [],
                  branches: [
                    (
                      cond: eq(left: const_or_var(es), right: set_expr({})),
                      body: [
                        return_stmt(
                          seq_expr(
                            head: [
                              fn_call(
                                name: fn_symbol(set_var),
                                params: [const_or_var(res_var), const_or_var(empty_map)],
                                named_params: []
                              )
                            ]
                          )
                        )
                      ]
                    )
                  ]
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(lvar),
                    params: [const_or_var(next_obj_var_id)],
                    named_params: []
                  ),
                  var: var(cond_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(vvar),
                    params: [
                      const_or_var(next_vector_var_id),
                      fn_call(
                        name: fn_symbol(size),
                        params: [const_or_var(es)],
                        named_params: []
                      )
                    ],
                    named_params: []
                  ),
                  var: var(keys_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(vvar),
                    params: [
                      fn_call(
                        name: op_symbol(plus),
                        params: [const_or_var(next_vector_var_id), object(1)],
                        named_params: []
                      ),
                      fn_call(
                        name: fn_symbol(size),
                        params: [const_or_var(es)],
                        named_params: []
                      )
                    ],
                    named_params: []
                  ),
                  var: var(values_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(ivar),
                    params: [const_or_var(next_int_var_id)],
                    named_params: []
                  ),
                  var: var(count_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(evar),
                    params: [
                      accessor(expr: const_or_var(keys_var), field: object(id)),
                      const_or_var(count_var)
                    ],
                    named_params: []
                  ),
                  var: var(curr_key_slot_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(evar),
                    params: [
                      accessor(expr: const_or_var(values_var), field: object(id)),
                      const_or_var(count_var)
                    ],
                    named_params: []
                  ),
                  var: var(curr_value_slot_var)
                ),
                assignment_stmt(
                  value: seq_expr(
                    head: [
                      fn_call(
                        name: fn_symbol(set_ivar),
                        params: [const_or_var(count_var), object(0)],
                        named_params: []
                      )
                    ]
                  ),
                  var: var(code)
                ),
                let_stmt(
                  body: [
                    for_stmt(
                      body: [
                        assignment_stmt(
                          value: fn_call(
                            name: fn_symbol(gen_eval_code),
                            params: [
                              accessor(expr: const_or_var(e), field: object(key)),
                              const_or_var(curr_key_slot_var)
                            ],
                            named_params: []
                          ),
                          var: var(key_code)
                        ),
                        assignment_stmt(
                          value: fn_call(
                            name: fn_symbol(gen_eval_code),
                            params: [
                              accessor(expr: const_or_var(e), field: object(value)),
                              const_or_var(curr_value_slot_var)
                            ],
                            named_params: []
                          ),
                          var: var(value_code)
                        ),
                        assignment_stmt(
                          value: fn_call(
                            name: op_symbol(amp),
                            params: [
                              fn_call(
                                name: op_symbol(amp),
                                params: [const_or_var(key_code), const_or_var(value_code)],
                                named_params: []
                              ),
                              seq_expr(
                                head: [
                                  fn_call(
                                    name: fn_symbol(increment),
                                    params: [const_or_var(count_var)],
                                    named_params: []
                                  )
                                ]
                              )
                            ],
                            named_params: []
                          ),
                          var: var(entry_code)
                        ),
                        if_stmt(
                          else: [],
                          branches: [
                            (
                              cond: accessor_test(expr: const_or_var(e), field: object(cond)),
                              body: [
                                assignment_stmt(
                                  value: fn_call(
                                    name: fn_symbol(gen_eval_info),
                                    params: [
                                      accessor(expr: const_or_var(e), field: object(cond)),
                                      const_or_var(cond_var)
                                    ],
                                    named_params: [
                                      syn_fn_def(
                                        name: fn_symbol(next_obj_var_id),
                                        params: [],
                                        local_fns: [],
                                        expr: fn_call(
                                          name: op_symbol(plus),
                                          params: [const_or_var(next_obj_var_id), object(1)],
                                          named_params: []
                                        )
                                      )
                                    ]
                                  ),
                                  var: var(cond_info)
                                ),
                                assignment_stmt(
                                  value: fn_call(
                                    name: op_symbol(amp),
                                    params: [
                                      accessor(expr: const_or_var(cond_info), field: object(eval_code)),
                                      seq_expr(
                                        head: [
                                          fn_call(
                                            name: fn_symbol(check),
                                            params: [
                                              fn_call(
                                                name: fn_symbol(is_bool),
                                                params: [
                                                  accessor(expr: const_or_var(cond_info), field: object(expr))
                                                ],
                                                named_params: []
                                              )
                                            ],
                                            named_params: []
                                          ),
                                          fn_call(
                                            name: fn_symbol(do_if),
                                            params: [
                                              fn_call(
                                                name: fn_symbol(is_true),
                                                params: [
                                                  accessor(expr: const_or_var(cond_info), field: object(expr))
                                                ],
                                                named_params: []
                                              ),
                                              const_or_var(entry_code)
                                            ],
                                            named_params: []
                                          )
                                        ]
                                      )
                                    ],
                                    named_params: []
                                  ),
                                  var: var(entry_code)
                                )
                              ]
                            )
                          ]
                        ),
                        assignment_stmt(
                          value: fn_call(
                            name: op_symbol(amp),
                            params: [const_or_var(code), const_or_var(entry_code)],
                            named_params: []
                          ),
                          var: var(code)
                        )
                      ],
                      loops: [
                        seq_iter(
                          var: var(e),
                          values: fn_call(
                            name: fn_symbol(rand_sort),
                            params: [const_or_var(es)],
                            named_params: []
                          )
                        )
                      ]
                    )
                  ],
                  asgnms: [
                    syn_fn_def(
                      name: fn_symbol(next_int_var_id),
                      params: [],
                      local_fns: [],
                      expr: fn_call(
                        name: op_symbol(plus),
                        params: [const_or_var(next_int_var_id), object(1)],
                        named_params: []
                      )
                    ),
                    syn_fn_def(
                      name: fn_symbol(next_vector_var_id),
                      params: [],
                      local_fns: [],
                      expr: fn_call(
                        name: op_symbol(plus),
                        params: [const_or_var(next_vector_var_id), object(2)],
                        named_params: []
                      )
                    )
                  ]
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      const_or_var(code),
                      seq_expr(
                        head: [
                          fn_call(
                            name: fn_symbol(mk_map),
                            params: [
                              const_or_var(res_var),
                              const_or_var(keys_var),
                              const_or_var(values_var),
                              const_or_var(count_var)
                            ],
                            named_params: []
                          )
                        ]
                      )
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(es)),
                tag: obj_ptrn(object(map_expr))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_info),
                    params: [
                      seq_expr(
                        head: [
                          accessor(expr: const_or_var(expr), field: object(tag)),
                          accessor(expr: const_or_var(expr), field: object(obj))
                        ]
                      )
                    ],
                    named_params: []
                  ),
                  var: var(info)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      accessor(expr: const_or_var(info), field: object(add_ref_eval_code)),
                      seq_expr(
                        head: [
                          fn_call(
                            name: fn_symbol(mk_tagged_obj),
                            params: [
                              const_or_var(res_var),
                              fn_call(
                                name: op_symbol(brackets),
                                params: [
                                  accessor(expr: const_or_var(info), field: object(exprs)),
                                  object(0)
                                ],
                                named_params: []
                              ),
                              fn_call(
                                name: op_symbol(brackets),
                                params: [
                                  accessor(expr: const_or_var(info), field: object(exprs)),
                                  object(1)
                                ],
                                named_params: []
                              )
                            ],
                            named_params: []
                          )
                        ]
                      )
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(tag_obj_expr))
              )
            ]
          ),
          case(
            expr: fn_call(
              name: fn_symbol(make_scopes),
              params: [
                fn_call(
                  name: fn_symbol(rand_sort_pairs),
                  params: [
                    accessor(expr: const_or_var(expr), field: object(named_params))
                  ],
                  named_params: []
                ),
                map_expr(
                  {
                    (value: const_or_var(expr), key: object(expr)),
                    (value: const_or_var(res_var), key: object(res_var))
                  }
                )
              ],
              named_params: []
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(fn_call)))
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_info),
                    params: [accessor(expr: const_or_var(expr), field: object(params))],
                    named_params: []
                  ),
                  var: var(pars_info)
                ),
                assignment_stmt(
                  value: seq_expr(
                    head: [
                      fn_call(
                        name: fn_symbol(call_cls),
                        params: [
                          const_or_var(res_var),
                          accessor(expr: const_or_var(expr), field: object(name)),
                          accessor(expr: const_or_var(pars_info), field: object(exprs))
                        ],
                        named_params: []
                      )
                    ]
                  ),
                  var: var(call_code)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          accessor(expr: const_or_var(pars_info), field: object(eval_code)),
                          const_or_var(call_code)
                        ],
                        named_params: []
                      ),
                      accessor(expr: const_or_var(pars_info), field: object(cleanup_code))
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(cls_call)))
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_info),
                    params: [accessor(expr: const_or_var(expr), field: object(params))],
                    named_params: []
                  ),
                  var: var(pars_info)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_code),
                    params: [
                      accessor(expr: const_or_var(expr), field: object(name)),
                      accessor(expr: const_or_var(pars_info), field: object(exprs)),
                      const_or_var(res_var)
                    ],
                    named_params: []
                  ),
                  var: var(call_code)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          accessor(expr: const_or_var(pars_info), field: object(eval_code)),
                          const_or_var(call_code)
                        ],
                        named_params: []
                      ),
                      accessor(expr: const_or_var(pars_info), field: object(cleanup_code))
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(builtin_call))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_info),
                    params: [
                      seq_expr(
                        head: [
                          accessor(expr: const_or_var(expr), field: object(left)),
                          accessor(expr: const_or_var(expr), field: object(right))
                        ]
                      )
                    ],
                    named_params: []
                  ),
                  var: var(info)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          accessor(expr: const_or_var(info), field: object(eval_code)),
                          seq_expr(
                            head: [
                              fn_call(
                                name: fn_symbol(set_var),
                                params: [
                                  const_or_var(res_var),
                                  fn_call(
                                    name: fn_symbol(to_obj),
                                    params: [
                                      fn_call(
                                        name: fn_symbol(is_eq),
                                        params: [
                                          fn_call(
                                            name: op_symbol(brackets),
                                            params: [
                                              accessor(expr: const_or_var(info), field: object(exprs)),
                                              object(0)
                                            ],
                                            named_params: []
                                          ),
                                          fn_call(
                                            name: op_symbol(brackets),
                                            params: [
                                              accessor(expr: const_or_var(info), field: object(exprs)),
                                              object(1)
                                            ],
                                            named_params: []
                                          )
                                        ],
                                        named_params: []
                                      )
                                    ],
                                    named_params: []
                                  )
                                ],
                                named_params: []
                              )
                            ]
                          )
                        ],
                        named_params: []
                      ),
                      accessor(expr: const_or_var(info), field: object(cleanup_code))
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(eq)))
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(bvar),
                    params: [const_or_var(next_bool_var_id)],
                    named_params: []
                  ),
                  var: var(bool_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_info),
                    params: [accessor(expr: const_or_var(expr), field: object(obj))],
                    named_params: []
                  ),
                  var: var(info)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_type_checking_code),
                    params: [
                      accessor(expr: const_or_var(expr), field: object(type)),
                      accessor(expr: const_or_var(info), field: object(expr)),
                      const_or_var(bool_var)
                    ],
                    named_params: [
                      syn_fn_def(
                        name: fn_symbol(next_obj_var_id),
                        params: [],
                        local_fns: [],
                        expr: accessor(expr: const_or_var(info), field: object(next_var_id))
                      ),
                      syn_fn_def(
                        name: fn_symbol(next_bool_var_id),
                        params: [],
                        local_fns: [],
                        expr: fn_call(
                          name: op_symbol(plus),
                          params: [const_or_var(next_bool_var_id), object(1)],
                          named_params: []
                        )
                      )
                    ]
                  ),
                  var: var(code)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          fn_call(
                            name: op_symbol(amp),
                            params: [
                              accessor(expr: const_or_var(info), field: object(eval_code)),
                              const_or_var(code)
                            ],
                            named_params: []
                          ),
                          seq_expr(
                            head: [
                              fn_call(
                                name: fn_symbol(set_var),
                                params: [
                                  const_or_var(res_var),
                                  fn_call(
                                    name: fn_symbol(to_obj),
                                    params: [const_or_var(bool_var)],
                                    named_params: []
                                  )
                                ],
                                named_params: []
                              )
                            ]
                          )
                        ],
                        named_params: []
                      ),
                      accessor(expr: const_or_var(info), field: object(cleanup_code))
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(membership))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_info),
                    params: [accessor(expr: const_or_var(expr), field: object(expr))],
                    named_params: []
                  ),
                  var: var(info)
                ),
                assignment_stmt(
                  value: seq_expr(
                    head: [
                      fn_call(
                        name: fn_symbol(ext_lookup),
                        params: [
                          const_or_var(res_var),
                          accessor(expr: const_or_var(info), field: object(expr)),
                          accessor(expr: const_or_var(expr), field: object(field))
                        ],
                        named_params: []
                      ),
                      fn_call(
                        name: fn_symbol(add_ref),
                        params: [const_or_var(res_var)],
                        named_params: []
                      )
                    ]
                  ),
                  var: var(code)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          accessor(expr: const_or_var(info), field: object(eval_code)),
                          const_or_var(code)
                        ],
                        named_params: []
                      ),
                      accessor(expr: const_or_var(info), field: object(cleanup_code))
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(accessor)))
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_info),
                    params: [accessor(expr: const_or_var(expr), field: object(expr))],
                    named_params: []
                  ),
                  var: var(info)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(bvar),
                    params: [const_or_var(next_bool_var_id)],
                    named_params: []
                  ),
                  var: var(bvar)
                ),
                assignment_stmt(
                  value: seq_expr(
                    head: [
                      fn_call(
                        name: fn_symbol(ext_lookup),
                        params: [
                          const_or_var(bvar),
                          const_or_var(res_var),
                          accessor(expr: const_or_var(info), field: object(expr)),
                          accessor(expr: const_or_var(expr), field: object(field))
                        ],
                        named_params: []
                      ),
                      fn_call(
                        name: fn_symbol(set_var),
                        params: [
                          const_or_var(res_var),
                          fn_call(
                            name: fn_symbol(to_obj),
                            params: [const_or_var(bvar)],
                            named_params: []
                          )
                        ],
                        named_params: []
                      )
                    ]
                  ),
                  var: var(code)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          accessor(expr: const_or_var(info), field: object(eval_code)),
                          const_or_var(code)
                        ],
                        named_params: []
                      ),
                      accessor(expr: const_or_var(info), field: object(cleanup_code))
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(accessor_test))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_info),
                    params: [accessor(expr: const_or_var(expr), field: object(cond))],
                    named_params: []
                  ),
                  var: var(info)
                ),
                assignment_stmt(
                  value: seq_expr(
                    head: [
                      fn_call(
                        name: fn_symbol(check),
                        params: [
                          fn_call(
                            name: fn_symbol(is_bool),
                            params: [accessor(expr: const_or_var(info), field: object(expr))],
                            named_params: []
                          )
                        ],
                        named_params: []
                      ),
                      fn_call(
                        name: fn_symbol(branch),
                        params: [
                          fn_call(
                            name: fn_symbol(is_true),
                            params: [accessor(expr: const_or_var(info), field: object(expr))],
                            named_params: []
                          ),
                          fn_call(
                            name: fn_symbol(gen_eval_code),
                            params: [
                              accessor(expr: const_or_var(expr), field: object(then)),
                              const_or_var(res_var)
                            ],
                            named_params: []
                          ),
                          fn_call(
                            name: fn_symbol(gen_eval_code),
                            params: [
                              accessor(expr: const_or_var(expr), field: object(else)),
                              const_or_var(res_var)
                            ],
                            named_params: []
                          )
                        ],
                        named_params: []
                      )
                    ]
                  ),
                  var: var(code)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      accessor(expr: const_or_var(info), field: object(eval_code)),
                      const_or_var(code)
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(if_expr)))
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(bvar),
                    params: [const_or_var(next_bool_var_id)],
                    named_params: []
                  ),
                  var: var(tmp_bvar)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_info),
                    params: [accessor(expr: const_or_var(expr), field: object(exprs))],
                    named_params: []
                  ),
                  var: var(info)
                ),
                assignment_stmt(
                  value: seq_expr(head: [const_or_var(terminate)]),
                  var: var(code)
                ),
                for_stmt(
                  body: [
                    let_stmt(
                      body: [
                        assignment_stmt(
                          value: fn_call(
                            name: fn_symbol(gen_eval_code),
                            params: [
                              accessor(expr: const_or_var(c), field: object(expr)),
                              const_or_var(res_var)
                            ],
                            named_params: []
                          ),
                          var: var(case_code)
                        ),
                        assignment_stmt(
                          value: fn_call(
                            name: op_symbol(amp),
                            params: [
                              const_or_var(case_code),
                              seq_expr(head: [const_or_var(exit_block)])
                            ],
                            named_params: []
                          ),
                          var: var(case_code)
                        ),
                        for_stmt(
                          body: [
                            assignment_stmt(
                              value: fn_call(
                                name: op_symbol(amp),
                                params: [
                                  fn_call(
                                    name: fn_symbol(gen_ptrn_matching_code),
                                    params: [
                                      const_or_var(p),
                                      fn_call(
                                        name: fn_symbol(rev_at),
                                        params: [
                                          accessor(expr: const_or_var(info), field: object(exprs)),
                                          const_or_var(i)
                                        ],
                                        named_params: []
                                      ),
                                      const_or_var(tmp_bvar)
                                    ],
                                    named_params: []
                                  ),
                                  seq_expr(
                                    head: [
                                      fn_call(
                                        name: fn_symbol(do_if),
                                        params: [const_or_var(tmp_bvar), const_or_var(case_code)],
                                        named_params: []
                                      )
                                    ]
                                  )
                                ],
                                named_params: []
                              ),
                              var: var(case_code)
                            )
                          ],
                          loops: [
                            seq_iter(
                              var: var(p),
                              values: fn_call(
                                name: fn_symbol(reverse),
                                params: [accessor(expr: const_or_var(c), field: object(ptrns))],
                                named_params: []
                              ),
                              idx_var: var(i)
                            )
                          ]
                        )
                      ],
                      asgnms: [
                        syn_fn_def(
                          name: fn_symbol(next_obj_var_id),
                          params: [],
                          local_fns: [],
                          expr: accessor(expr: const_or_var(info), field: object(next_var_id))
                        )
                      ]
                    ),
                    assignment_stmt(
                      value: fn_call(
                        name: op_symbol(amp),
                        params: [const_or_var(case_code), const_or_var(code)],
                        named_params: []
                      ),
                      var: var(code)
                    )
                  ],
                  loops: [
                    seq_iter(
                      var: var(c),
                      values: fn_call(
                        name: fn_symbol(reverse),
                        params: [accessor(expr: const_or_var(expr), field: object(cases))],
                        named_params: []
                      )
                    )
                  ]
                ),
                assignment_stmt(
                  value: seq_expr(
                    head: [
                      fn_call(
                        name: fn_symbol(execute_block),
                        params: [const_or_var(code)],
                        named_params: []
                      )
                    ]
                  ),
                  var: var(code)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          accessor(expr: const_or_var(info), field: object(eval_code)),
                          const_or_var(code)
                        ],
                        named_params: []
                      ),
                      accessor(expr: const_or_var(info), field: object(cleanup_code))
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(match_expr))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(set_found_var_and_leave),
                    params: [const_or_var(res_var)],
                    named_params: []
                  ),
                  var: var(action)
                ),
                if_stmt(
                  else: [],
                  branches: [
                    (
                      cond: accessor_test(expr: const_or_var(expr), field: object(sel_expr)),
                      body: [
                        assignment_stmt(
                          value: fn_call(
                            name: fn_symbol(action),
                            params: [
                              accessor(expr: const_or_var(expr), field: object(sel_expr)),
                              const_or_var(action)
                            ],
                            named_params: []
                          ),
                          var: var(action)
                        )
                      ]
                    )
                  ]
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_iter_code),
                    params: [
                      accessor(expr: const_or_var(expr), field: object(source)),
                      const_or_var(action)
                    ],
                    named_params: []
                  ),
                  var: var(code)
                ),
                return_stmt(
                  seq_expr(
                    head: [
                      fn_call(
                        name: fn_symbol(set_var),
                        params: [const_or_var(res_var), const_or_var(obj_false)],
                        named_params: []
                      ),
                      fn_call(
                        name: fn_symbol(execute_block),
                        params: [const_or_var(code)],
                        named_params: []
                      )
                    ]
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(ex_qual)))
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(svar),
                    params: [const_or_var(next_stream_var_id)],
                    named_params: []
                  ),
                  var: var(strm_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(eval_expr_and_add_to_set),
                    params: [
                      accessor(expr: const_or_var(expr), field: object(expr)),
                      const_or_var(strm_var)
                    ],
                    named_params: []
                  ),
                  var: var(action)
                ),
                if_stmt(
                  else: [],
                  branches: [
                    (
                      cond: accessor_test(expr: const_or_var(expr), field: object(sel_expr)),
                      body: [
                        assignment_stmt(
                          value: fn_call(
                            name: fn_symbol(action),
                            params: [
                              accessor(expr: const_or_var(expr), field: object(sel_expr)),
                              const_or_var(action)
                            ],
                            named_params: []
                          ),
                          var: var(action)
                        )
                      ]
                    )
                  ]
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_iter_code),
                    params: [
                      accessor(expr: const_or_var(expr), field: object(source)),
                      const_or_var(action)
                    ],
                    named_params: [
                      syn_fn_def(
                        name: fn_symbol(next_stream_var_id),
                        params: [],
                        local_fns: [],
                        expr: fn_call(
                          name: op_symbol(plus),
                          params: [const_or_var(next_stream_var_id), object(1)],
                          named_params: []
                        )
                      )
                    ]
                  ),
                  var: var(code)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          seq_expr(
                            head: [
                              fn_call(
                                name: fn_symbol(init_stream),
                                params: [const_or_var(strm_var)],
                                named_params: []
                              )
                            ]
                          ),
                          const_or_var(code)
                        ],
                        named_params: []
                      ),
                      seq_expr(
                        head: [
                          fn_call(
                            name: fn_symbol(mk_set_from_stream),
                            params: [const_or_var(res_var), const_or_var(strm_var)],
                            named_params: []
                          )
                        ]
                      )
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(set_comp)))
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(svar),
                    params: [const_or_var(next_stream_var_id)],
                    named_params: []
                  ),
                  var: var(key_strm_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(svar),
                    params: [
                      fn_call(
                        name: op_symbol(plus),
                        params: [const_or_var(next_stream_var_id), object(1)],
                        named_params: []
                      )
                    ],
                    named_params: []
                  ),
                  var: var(value_strm_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(eval_exprs_and_add_to_map),
                    params: [
                      accessor(expr: const_or_var(expr), field: object(key_expr)),
                      accessor(expr: const_or_var(expr), field: object(value_expr)),
                      const_or_var(key_strm_var),
                      const_or_var(value_strm_var)
                    ],
                    named_params: []
                  ),
                  var: var(action)
                ),
                if_stmt(
                  else: [],
                  branches: [
                    (
                      cond: accessor_test(expr: const_or_var(expr), field: object(sel_expr)),
                      body: [
                        assignment_stmt(
                          value: fn_call(
                            name: fn_symbol(action),
                            params: [
                              accessor(expr: const_or_var(expr), field: object(sel_expr)),
                              const_or_var(action)
                            ],
                            named_params: []
                          ),
                          var: var(action)
                        )
                      ]
                    )
                  ]
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_iter_code),
                    params: [
                      accessor(expr: const_or_var(expr), field: object(source)),
                      const_or_var(action)
                    ],
                    named_params: [
                      syn_fn_def(
                        name: fn_symbol(next_stream_var_id),
                        params: [],
                        local_fns: [],
                        expr: fn_call(
                          name: op_symbol(plus),
                          params: [const_or_var(next_stream_var_id), object(2)],
                          named_params: []
                        )
                      )
                    ]
                  ),
                  var: var(code)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          seq_expr(
                            head: [
                              fn_call(
                                name: fn_symbol(init_stream),
                                params: [const_or_var(key_strm_var)],
                                named_params: []
                              ),
                              fn_call(
                                name: fn_symbol(init_stream),
                                params: [const_or_var(value_strm_var)],
                                named_params: []
                              )
                            ]
                          ),
                          const_or_var(code)
                        ],
                        named_params: []
                      ),
                      seq_expr(
                        head: [
                          fn_call(
                            name: fn_symbol(mk_map_from_streams),
                            params: [
                              const_or_var(res_var),
                              const_or_var(key_strm_var),
                              const_or_var(value_strm_var)
                            ],
                            named_params: []
                          )
                        ]
                      )
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(map_comp)))
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(lvar),
                    params: [const_or_var(next_obj_var_id)],
                    named_params: []
                  ),
                  var: var(src_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(lvar),
                    params: [
                      fn_call(
                        name: op_symbol(plus),
                        params: [const_or_var(next_obj_var_id), object(1)],
                        named_params: []
                      )
                    ],
                    named_params: []
                  ),
                  var: var(item_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(lvar),
                    params: [
                      fn_call(
                        name: op_symbol(plus),
                        params: [const_or_var(next_obj_var_id), object(2)],
                        named_params: []
                      )
                    ],
                    named_params: []
                  ),
                  var: var(sel_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(seq_it_var),
                    params: [const_or_var(next_seq_it_var_id)],
                    named_params: []
                  ),
                  var: var(it_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(svar),
                    params: [const_or_var(next_stream_var_id)],
                    named_params: []
                  ),
                  var: var(strm_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(ivar),
                    params: [const_or_var(next_int_var_id)],
                    named_params: []
                  ),
                  var: var(idx_var)
                ),
                let_stmt(
                  body: [
                    assignment_stmt(
                      value: fn_call(
                        name: fn_symbol(gen_eval_info),
                        params: [
                          accessor(expr: const_or_var(expr), field: object(src_expr)),
                          const_or_var(src_var)
                        ],
                        named_params: []
                      ),
                      var: var(src_info)
                    ),
                    assignment_stmt(
                      value: fn_call(
                        name: fn_symbol(gen_eval_info),
                        params: [
                          accessor(expr: const_or_var(expr), field: object(expr)),
                          const_or_var(item_var)
                        ],
                        named_params: []
                      ),
                      var: var(item_info)
                    ),
                    assignment_stmt(
                      value: if_expr(
                        else: object(nil),
                        branches: [
                          (
                            expr: fn_call(
                              name: fn_symbol(gen_eval_info),
                              params: [
                                accessor(expr: const_or_var(expr), field: object(sel_expr)),
                                const_or_var(sel_var)
                              ],
                              named_params: []
                            ),
                            cond: accessor_test(expr: const_or_var(expr), field: object(sel_expr))
                          )
                        ]
                      ),
                      var: var(sel_info)
                    )
                  ],
                  asgnms: [
                    syn_fn_def(
                      name: fn_symbol(next_obj_var_id),
                      params: [],
                      local_fns: [],
                      expr: fn_call(
                        name: op_symbol(plus),
                        params: [const_or_var(next_obj_var_id), object(3)],
                        named_params: []
                      )
                    ),
                    syn_fn_def(
                      name: fn_symbol(next_seq_it_var_id),
                      params: [],
                      local_fns: [],
                      expr: fn_call(
                        name: op_symbol(plus),
                        params: [const_or_var(next_seq_it_var_id), object(1)],
                        named_params: []
                      )
                    ),
                    syn_fn_def(
                      name: fn_symbol(next_stream_var_id),
                      params: [],
                      local_fns: [],
                      expr: fn_call(
                        name: op_symbol(plus),
                        params: [const_or_var(next_stream_var_id), object(1)],
                        named_params: []
                      )
                    ),
                    syn_fn_def(
                      name: fn_symbol(next_int_var_id),
                      params: [],
                      local_fns: [],
                      expr: fn_call(
                        name: op_symbol(plus),
                        params: [const_or_var(next_int_var_id), object(1)],
                        named_params: []
                      )
                    )
                  ]
                ),
                assignment_stmt(
                  value: or(
                    left: not(
                      accessor_test(expr: const_or_var(expr), field: object(sel_expr))
                    ),
                    right: accessor_test(expr: const_or_var(expr), field: object(idx_var))
                  ),
                  var: var(needs_idx_var)
                ),
                assignment_stmt(
                  value: not(
                    accessor_test(expr: const_or_var(expr), field: object(sel_expr))
                  ),
                  var: var(knows_size)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: op_symbol(amp),
                    params: [
                      accessor(
                        expr: const_or_var(item_info),
                        field: object(add_ref_eval_code)
                      ),
                      if_expr(
                        else: seq_expr(
                          head: [
                            fn_call(
                              name: fn_symbol(append),
                              params: [
                                const_or_var(strm_var),
                                accessor(expr: const_or_var(item_info), field: object(expr))
                              ],
                              named_params: []
                            )
                          ]
                        ),
                        branches: [
                          (
                            expr: seq_expr(
                              head: [
                                fn_call(
                                  name: fn_symbol(set_at),
                                  params: [
                                    const_or_var(res_var),
                                    const_or_var(idx_var),
                                    accessor(expr: const_or_var(item_info), field: object(expr))
                                  ],
                                  named_params: []
                                )
                              ]
                            ),
                            cond: const_or_var(knows_size)
                          )
                        ]
                      )
                    ],
                    named_params: []
                  ),
                  var: var(eval_and_assign_code)
                ),
                assignment_stmt(
                  value: const_or_var(eval_and_assign_code),
                  var: var(core_loop_code)
                ),
                if_stmt(
                  else: [],
                  branches: [
                    (
                      cond: accessor_test(expr: const_or_var(expr), field: object(sel_expr)),
                      body: [
                        assignment_stmt(
                          value: fn_call(
                            name: op_symbol(amp),
                            params: [
                              accessor(expr: const_or_var(sel_info), field: object(eval_code)),
                              seq_expr(
                                head: [
                                  fn_call(
                                    name: fn_symbol(check),
                                    params: [
                                      fn_call(
                                        name: fn_symbol(is_bool),
                                        params: [
                                          accessor(expr: const_or_var(sel_info), field: object(expr))
                                        ],
                                        named_params: []
                                      )
                                    ],
                                    named_params: []
                                  ),
                                  fn_call(
                                    name: fn_symbol(do_if),
                                    params: [
                                      fn_call(
                                        name: fn_symbol(is_true),
                                        params: [
                                          accessor(expr: const_or_var(sel_info), field: object(expr))
                                        ],
                                        named_params: []
                                      ),
                                      const_or_var(core_loop_code)
                                    ],
                                    named_params: []
                                  )
                                ]
                              )
                            ],
                            named_params: []
                          ),
                          var: var(core_loop_code)
                        )
                      ]
                    )
                  ]
                ),
                assignment_stmt(
                  value: seq_expr(
                    head: [
                      if_expr(
                        else: fn_call(
                          name: fn_symbol(init_stream),
                          params: [const_or_var(strm_var)],
                          named_params: []
                        ),
                        branches: [
                          (
                            expr: fn_call(
                              name: fn_symbol(mk_array),
                              params: [
                                const_or_var(res_var),
                                fn_call(
                                  name: fn_symbol(get_seq_len),
                                  params: [
                                    accessor(expr: const_or_var(src_info), field: object(expr))
                                  ],
                                  named_params: []
                                ),
                                const_or_var(obj_nil)
                              ],
                              named_params: []
                            ),
                            cond: const_or_var(knows_size)
                          )
                        ]
                      ),
                      fn_call(
                        name: fn_symbol(get_iter),
                        params: [
                          const_or_var(it_var),
                          accessor(expr: const_or_var(src_info), field: object(expr))
                        ],
                        named_params: []
                      ),
                      fn_call(
                        name: fn_symbol(maybe_op),
                        params: [
                          fn_call(
                            name: fn_symbol(set_ivar),
                            params: [const_or_var(idx_var), object(0)],
                            named_params: []
                          ),
                          const_or_var(needs_idx_var)
                        ],
                        named_params: []
                      ),
                      fn_call(
                        name: fn_symbol(repeat),
                        params: [
                          fn_call(
                            name: op_symbol(amp),
                            params: [
                              fn_call(
                                name: op_symbol(amp),
                                params: [
                                  seq_expr(
                                    head: [
                                      fn_call(
                                        name: fn_symbol(break_if),
                                        params: [
                                          fn_call(
                                            name: fn_symbol(is_out_of_range),
                                            params: [const_or_var(it_var)],
                                            named_params: []
                                          )
                                        ],
                                        named_params: []
                                      ),
                                      fn_call(
                                        name: fn_symbol(set_var),
                                        params: [
                                          accessor(expr: const_or_var(expr), field: object(var)),
                                          fn_call(
                                            name: fn_symbol(get_curr_obj),
                                            params: [const_or_var(it_var)],
                                            named_params: []
                                          )
                                        ],
                                        named_params: []
                                      ),
                                      if_expr(
                                        else: const_or_var(no_op),
                                        branches: [
                                          (
                                            expr: fn_call(
                                              name: fn_symbol(set_var),
                                              params: [
                                                accessor(expr: const_or_var(expr), field: object(idx_var)),
                                                fn_call(
                                                  name: fn_symbol(to_obj),
                                                  params: [const_or_var(idx_var)],
                                                  named_params: []
                                                )
                                              ],
                                              named_params: []
                                            ),
                                            cond: accessor_test(expr: const_or_var(expr), field: object(idx_var))
                                          )
                                        ]
                                      )
                                    ]
                                  ),
                                  const_or_var(core_loop_code)
                                ],
                                named_params: []
                              ),
                              seq_expr(
                                head: [
                                  fn_call(
                                    name: fn_symbol(move_forward),
                                    params: [const_or_var(it_var)],
                                    named_params: []
                                  ),
                                  fn_call(
                                    name: fn_symbol(maybe_op),
                                    params: [
                                      fn_call(
                                        name: fn_symbol(increment),
                                        params: [const_or_var(idx_var)],
                                        named_params: []
                                      ),
                                      const_or_var(needs_idx_var)
                                    ],
                                    named_params: []
                                  )
                                ]
                              )
                            ],
                            named_params: []
                          )
                        ],
                        named_params: []
                      ),
                      fn_call(
                        name: fn_symbol(maybe_op),
                        params: [
                          fn_call(
                            name: fn_symbol(mk_seq_from_stream),
                            params: [const_or_var(res_var), const_or_var(strm_var)],
                            named_params: []
                          ),
                          not(const_or_var(knows_size))
                        ],
                        named_params: []
                      )
                    ]
                  ),
                  var: var(loop_code)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          accessor(expr: const_or_var(src_info), field: object(eval_code)),
                          const_or_var(loop_code)
                        ],
                        named_params: []
                      ),
                      accessor(expr: const_or_var(src_info), field: object(cleanup_code))
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(seq_comp)))
            ]
          )
        ],
        exprs: [fn_par(0), fn_par(1)]
      ),
      res_type: seq_type(nonempty: true, elem_type: type_ref(type_symbol(instr)))
    ),
    syn_fn_def(
      name: fn_symbol(make_scopes),
      params: [
        (
          type: seq_type(
            nonempty: false,
            elem_type: fixed_seq_type(
              [
                union_type(
                  {
                    tag_type(
                      obj_type: type_ref(type_symbol(atom)),
                      tag_type: symb_type(object(named_par))
                    )
                  }
                ),
                type_ref(type_symbol(extexpr))
              ]
            )
          ),
          var: var(asgnms)
        ),
        (var: var(body_gen_info))
      ],
      local_fns: [],
      expr: do_expr(
        [
          if_stmt(
            else: [],
            branches: [
              (
                cond: eq(left: const_or_var(asgnms), right: seq_expr(head: [])),
                body: [
                  if_stmt(
                    else: [
                      return_stmt(
                        fn_call(
                          name: fn_symbol(gen_code),
                          params: [
                            accessor(expr: const_or_var(body_gen_info), field: object(body)),
                            accessor(expr: const_or_var(body_gen_info), field: object(res_var)),
                            accessor(
                              expr: const_or_var(body_gen_info),
                              field: object(all_rel_vars)
                            ),
                            accessor(
                              expr: const_or_var(body_gen_info),
                              field: object(break_vars)
                            ),
                            accessor(
                              expr: const_or_var(body_gen_info),
                              field: object(surv_vars)
                            )
                          ],
                          named_params: []
                        )
                      )
                    ],
                    branches: [
                      (
                        cond: accessor_test(expr: const_or_var(body_gen_info), field: object(expr)),
                        body: [
                          assignment_stmt(
                            value: accessor(expr: const_or_var(body_gen_info), field: object(expr)),
                            var: var(expr)
                          ),
                          assignment_stmt(
                            value: accessor(expr: const_or_var(body_gen_info), field: object(res_var)),
                            var: var(res_var)
                          ),
                          assignment_stmt(
                            value: fn_call(
                              name: fn_symbol(gen_eval_info),
                              params: [accessor(expr: const_or_var(expr), field: object(params))],
                              named_params: []
                            ),
                            var: var(pars_info)
                          ),
                          assignment_stmt(
                            value: seq_expr(
                              head: [
                                fn_call(
                                  name: fn_symbol(call_proc),
                                  params: [
                                    const_or_var(res_var),
                                    accessor(expr: const_or_var(expr), field: object(name)),
                                    accessor(expr: const_or_var(pars_info), field: object(exprs))
                                  ],
                                  named_params: []
                                )
                              ]
                            ),
                            var: var(call_code)
                          ),
                          return_stmt(
                            fn_call(
                              name: op_symbol(amp),
                              params: [
                                fn_call(
                                  name: op_symbol(amp),
                                  params: [
                                    accessor(expr: const_or_var(pars_info), field: object(eval_code)),
                                    const_or_var(call_code)
                                  ],
                                  named_params: []
                                ),
                                accessor(expr: const_or_var(pars_info), field: object(cleanup_code))
                              ],
                              named_params: []
                            )
                          )
                        ]
                      )
                    ]
                  )
                ]
              )
            ]
          ),
          assignment_stmt(
            value: fn_call(
              name: fn_symbol(left),
              params: [
                fn_call(
                  name: op_symbol(brackets),
                  params: [const_or_var(asgnms), object(0)],
                  named_params: []
                )
              ],
              named_params: []
            ),
            var: var(var)
          ),
          assignment_stmt(
            value: fn_call(
              name: fn_symbol(right),
              params: [
                fn_call(
                  name: op_symbol(brackets),
                  params: [const_or_var(asgnms), object(0)],
                  named_params: []
                )
              ],
              named_params: []
            ),
            var: var(expr)
          ),
          assignment_stmt(
            value: fn_call(
              name: fn_symbol(subseq),
              params: [
                const_or_var(asgnms),
                object(1),
                fn_call(
                  name: op_symbol(minus),
                  params: [
                    fn_call(
                      name: fn_symbol(length),
                      params: [const_or_var(asgnms)],
                      named_params: []
                    ),
                    object(1)
                  ],
                  named_params: []
                )
              ],
              named_params: []
            ),
            var: var(rem_asgnms)
          ),
          if_stmt(
            else: [
              assignment_stmt(
                value: fn_call(
                  name: fn_symbol(length),
                  params: [accessor(expr: const_or_var(expr), field: object(params))],
                  named_params: []
                ),
                var: var(arity)
              ),
              assignment_stmt(
                value: fn_call(
                  name: fn_symbol(set),
                  params: [
                    fn_call(
                      name: op_symbol(amp),
                      params: [
                        seq_comp(
                          var: var(v),
                          expr: const_or_var(v),
                          src_expr: accessor(expr: const_or_var(expr), field: object(params)),
                          sel_expr: neq(left: const_or_var(v), right: object(nil))
                        ),
                        seq_comp(
                          var: var(i),
                          expr: tag_obj_expr(obj: const_or_var(i), tag: object(fn_par)),
                          src_expr: fn_call(
                            name: fn_symbol(indexes),
                            params: [accessor(expr: const_or_var(expr), field: object(params))],
                            named_params: []
                          )
                        )
                      ],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                var: var(loc_vs)
              ),
              assignment_stmt(
                value: fn_call(
                  name: fn_symbol(rand_sort),
                  params: [
                    fn_call(
                      name: op_symbol(minus),
                      params: [
                        fn_call(
                          name: fn_symbol(extern_vars),
                          params: [accessor(expr: const_or_var(expr), field: object(expr))],
                          named_params: []
                        ),
                        const_or_var(loc_vs)
                      ],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                var: var(ext_vs)
              ),
              assignment_stmt(
                value: fn_call(
                  name: op_symbol(amp),
                  params: [
                    fn_call(
                      name: op_symbol(amp),
                      params: [
                        seq_comp(
                          var: var(v),
                          expr: fn_call(
                            name: fn_symbol(set_var),
                            params: [
                              const_or_var(v),
                              fn_call(
                                name: fn_symbol(fn_par),
                                params: [const_or_var(i)],
                                named_params: []
                              )
                            ],
                            named_params: []
                          ),
                          idx_var: var(i),
                          src_expr: accessor(expr: const_or_var(expr), field: object(params)),
                          sel_expr: neq(left: const_or_var(v), right: object(nil))
                        ),
                        seq_comp(
                          var: var(v),
                          expr: fn_call(
                            name: fn_symbol(set_var),
                            params: [
                              const_or_var(v),
                              fn_call(
                                name: fn_symbol(cls_ext_par),
                                params: [const_or_var(i)],
                                named_params: []
                              )
                            ],
                            named_params: []
                          ),
                          idx_var: var(i),
                          src_expr: const_or_var(ext_vs)
                        )
                      ],
                      named_params: []
                    ),
                    fn_call(
                      name: fn_symbol(gen_fn_body),
                      params: [accessor(expr: const_or_var(expr), field: object(expr))],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                var: var(cls_body)
              ),
              assignment_stmt(
                value: fn_call(
                  name: fn_symbol(make_scopes),
                  params: [const_or_var(rem_asgnms), const_or_var(body_gen_info)],
                  named_params: []
                ),
                var: var(body)
              ),
              return_stmt(
                seq_expr(
                  head: [
                    fn_call(
                      name: fn_symbol(cls_scope),
                      params: [
                        const_or_var(var),
                        const_or_var(arity),
                        const_or_var(ext_vs),
                        const_or_var(cls_body),
                        const_or_var(body)
                      ],
                      named_params: []
                    )
                  ]
                )
              )
            ],
            branches: [
              (
                cond: membership(type: type_ref(type_symbol(expr)), obj: const_or_var(expr)),
                body: [
                  assignment_stmt(
                    value: fn_call(
                      name: fn_symbol(gen_eval_info),
                      params: [const_or_var(expr)],
                      named_params: []
                    ),
                    var: var(info)
                  ),
                  assignment_stmt(
                    value: fn_call(
                      name: fn_symbol(make_scopes),
                      params: [const_or_var(rem_asgnms), const_or_var(body_gen_info)],
                      named_params: [
                        syn_fn_def(
                          name: fn_symbol(next_obj_var_id),
                          params: [],
                          local_fns: [],
                          expr: accessor(expr: const_or_var(info), field: object(next_var_id))
                        )
                      ]
                    ),
                    var: var(body)
                  ),
                  return_stmt(
                    fn_call(
                      name: op_symbol(amp),
                      params: [
                        fn_call(
                          name: op_symbol(amp),
                          params: [
                            accessor(expr: const_or_var(info), field: object(eval_code)),
                            seq_expr(
                              head: [
                                fn_call(
                                  name: fn_symbol(var_scope),
                                  params: [
                                    const_or_var(var),
                                    accessor(expr: const_or_var(info), field: object(expr)),
                                    const_or_var(body)
                                  ],
                                  named_params: []
                                )
                              ]
                            )
                          ],
                          named_params: []
                        ),
                        accessor(expr: const_or_var(info), field: object(cleanup_code))
                      ],
                      named_params: []
                    )
                  )
                ]
              )
            ]
          )
        ]
      ),
      res_type: seq_type(nonempty: true, elem_type: type_ref(type_symbol(instr)))
    ),
    syn_fn_def(
      name: fn_symbol(gen_code),
      params: [
        (
          type: seq_type(
            nonempty: false,
            elem_type: type_ref(type_symbol(statement))
          ),
          var: var(stmts)
        ),
        (type: type_ref(type_symbol(objvar)), var: var(res_var))
      ],
      local_fns: [],
      expr: fn_call(
        name: fn_symbol(gen_code),
        params: [
          const_or_var(stmts),
          const_or_var(res_var),
          set_expr({}),
          set_expr({}),
          set_expr({})
        ],
        named_params: []
      ),
      res_type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr)))
    ),
    syn_fn_def(
      name: fn_symbol(gen_code),
      params: [
        (
          type: seq_type(
            nonempty: false,
            elem_type: type_ref(type_symbol(statement))
          ),
          var: var(stmts)
        ),
        (type: type_ref(type_symbol(objvar)), var: var(res_var)),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(objvar))),
          var: var(all_rel_vars)
        ),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(objvar))),
          var: var(break_vars)
        ),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(objvar))),
          var: var(surv_vars)
        )
      ],
      local_fns: [],
      expr: do_expr(
        [
          assert_stmt(
            fn_call(
              name: fn_symbol(subset),
              params: [const_or_var(break_vars), const_or_var(all_rel_vars)],
              named_params: []
            )
          ),
          assert_stmt(
            not(
              fn_call(
                name: fn_symbol(in),
                params: [const_or_var(res_var), const_or_var(all_rel_vars)],
                named_params: []
              )
            )
          ),
          assert_stmt(
            fn_call(
              name: fn_symbol(disjoint),
              params: [const_or_var(all_rel_vars), const_or_var(surv_vars)],
              named_params: []
            )
          ),
          assignment_stmt(value: set_expr({}), var: var(vs)),
          assignment_stmt(value: seq_expr(head: []), var: var(code)),
          for_stmt(
            body: [
              assignment_stmt(
                value: fn_call(
                  name: op_symbol(amp),
                  params: [
                    const_or_var(code),
                    fn_call(
                      name: fn_symbol(gen_code),
                      params: [
                        const_or_var(s),
                        const_or_var(res_var),
                        fn_call(
                          name: op_symbol(amp),
                          params: [const_or_var(all_rel_vars), const_or_var(vs)],
                          named_params: []
                        ),
                        fn_call(
                          name: op_symbol(amp),
                          params: [const_or_var(break_vars), const_or_var(vs)],
                          named_params: []
                        )
                      ],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                var: var(code)
              ),
              assignment_stmt(
                value: fn_call(
                  name: op_symbol(amp),
                  params: [
                    const_or_var(vs),
                    fn_call(
                      name: op_symbol(minus),
                      params: [
                        fn_call(
                          name: fn_symbol(new_vars),
                          params: [const_or_var(s)],
                          named_params: []
                        ),
                        const_or_var(all_rel_vars)
                      ],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                var: var(vs)
              )
            ],
            loops: [seq_iter(var: var(s), values: const_or_var(stmts))]
          ),
          if_stmt(
            else: [],
            branches: [
              (
                cond: fn_call(
                  name: fn_symbol(can_fall_through),
                  params: [const_or_var(stmts)],
                  named_params: []
                ),
                body: [
                  assignment_stmt(
                    value: fn_call(
                      name: op_symbol(amp),
                      params: [
                        const_or_var(code),
                        seq_comp(
                          var: var(v),
                          expr: fn_call(
                            name: fn_symbol(release),
                            params: [const_or_var(v)],
                            named_params: []
                          ),
                          src_expr: fn_call(
                            name: fn_symbol(rand_sort),
                            params: [
                              fn_call(
                                name: op_symbol(minus),
                                params: [const_or_var(vs), const_or_var(surv_vars)],
                                named_params: []
                              )
                            ],
                            named_params: []
                          )
                        )
                      ],
                      named_params: []
                    ),
                    var: var(code)
                  )
                ]
              )
            ]
          ),
          return_stmt(const_or_var(code))
        ]
      ),
      res_type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(instr)))
    ),
    syn_fn_def(
      name: fn_symbol(gen_code),
      params: [
        (type: type_ref(type_symbol(statement)), var: var(stmt)),
        (type: type_ref(type_symbol(objvar)), var: var(res_var)),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(objvar))),
          var: var(all_rel_vars)
        ),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(objvar))),
          var: var(break_vars)
        )
      ],
      local_fns: [],
      expr: match_expr(
        cases: [
          case(
            expr: fn_call(
              name: op_symbol(amp),
              params: [
                seq_comp(
                  var: var(v),
                  expr: fn_call(
                    name: fn_symbol(release),
                    params: [const_or_var(v)],
                    named_params: []
                  ),
                  src_expr: fn_call(
                    name: fn_symbol(rand_sort),
                    params: [const_or_var(break_vars)],
                    named_params: []
                  )
                ),
                seq_expr(head: [const_or_var(break_loop)])
              ],
              named_params: []
            ),
            patterns: [obj_ptrn(object(break_stmt))]
          ),
          case(
            expr: seq_expr(head: [const_or_var(terminate)]),
            patterns: [obj_ptrn(object(fail_stmt))]
          ),
          case(
            expr: seq_expr(
              head: [
                fn_call(
                  name: fn_symbol(repeat),
                  params: [
                    fn_call(
                      name: fn_symbol(gen_code),
                      params: [
                        const_or_var(ss),
                        const_or_var(res_var),
                        const_or_var(all_rel_vars),
                        set_expr({}),
                        set_expr({})
                      ],
                      named_params: []
                    )
                  ],
                  named_params: []
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(ss)),
                tag: obj_ptrn(object(loop_stmt))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_info),
                    params: [const_or_var(e)],
                    named_params: []
                  ),
                  var: var(info)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      accessor(expr: const_or_var(info), field: object(eval_code)),
                      seq_expr(
                        head: [
                          fn_call(
                            name: fn_symbol(check),
                            params: [
                              fn_call(
                                name: fn_symbol(is_true),
                                params: [accessor(expr: const_or_var(info), field: object(expr))],
                                named_params: []
                              )
                            ],
                            named_params: []
                          )
                        ]
                      )
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(e)),
                tag: obj_ptrn(object(assert_stmt))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_info),
                    params: [const_or_var(e)],
                    named_params: []
                  ),
                  var: var(info)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          accessor(expr: const_or_var(info), field: object(eval_code)),
                          seq_expr(
                            head: [
                              fn_call(
                                name: fn_symbol(print_obj),
                                params: [accessor(expr: const_or_var(info), field: object(expr))],
                                named_params: []
                              )
                            ]
                          )
                        ],
                        named_params: []
                      ),
                      accessor(expr: const_or_var(info), field: object(cleanup_code))
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(e)),
                tag: obj_ptrn(object(print_stmt))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                assert_stmt(
                  not(
                    fn_call(
                      name: fn_symbol(in),
                      params: [const_or_var(res_var), const_or_var(all_rel_vars)],
                      named_params: []
                    )
                  )
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          fn_call(
                            name: fn_symbol(gen_eval_code),
                            params: [const_or_var(e), const_or_var(res_var)],
                            named_params: []
                          ),
                          seq_comp(
                            var: var(v),
                            expr: fn_call(
                              name: fn_symbol(release),
                              params: [const_or_var(v)],
                              named_params: []
                            ),
                            src_expr: fn_call(
                              name: fn_symbol(rand_sort),
                              params: [const_or_var(all_rel_vars)],
                              named_params: []
                            )
                          )
                        ],
                        named_params: []
                      ),
                      seq_expr(head: [const_or_var(exit_block)])
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(e)),
                tag: obj_ptrn(object(return_stmt))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                assert_stmt(
                  not(
                    fn_call(
                      name: fn_symbol(flow_control_can_jump_out),
                      params: [accessor(expr: const_or_var(stmt), field: object(body))],
                      named_params: []
                    )
                  )
                ),
                assignment_stmt(
                  value: fn_call(
                    name: op_symbol(minus),
                    params: [
                      fn_call(
                        name: fn_symbol(new_vars),
                        params: [accessor(expr: const_or_var(stmt), field: object(body))],
                        named_params: []
                      ),
                      const_or_var(all_rel_vars)
                    ],
                    named_params: []
                  ),
                  var: var(surv_vars)
                ),
                return_stmt(
                  fn_call(
                    name: fn_symbol(make_scopes),
                    params: [
                      fn_call(
                        name: fn_symbol(rand_sort_pairs),
                        params: [accessor(expr: const_or_var(stmt), field: object(asgnms))],
                        named_params: []
                      ),
                      map_expr(
                        {
                          (value: const_or_var(res_var), key: object(res_var)),
                          (
                            value: accessor(expr: const_or_var(stmt), field: object(body)),
                            key: object(body)
                          ),
                          (
                            value: const_or_var(all_rel_vars),
                            key: object(all_rel_vars)
                          ),
                          (value: const_or_var(break_vars), key: object(break_vars)),
                          (value: const_or_var(surv_vars), key: object(surv_vars))
                        }
                      )
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(let_stmt)))
            ]
          ),
          case(
            expr: do_expr(
              [
                if_stmt(
                  else: [
                    assignment_stmt(
                      value: fn_call(
                        name: fn_symbol(gen_eval_code),
                        params: [
                          accessor(expr: const_or_var(stmt), field: object(value)),
                          accessor(expr: const_or_var(stmt), field: object(var))
                        ],
                        named_params: []
                      ),
                      var: var(code)
                    )
                  ],
                  branches: [
                    (
                      cond: fn_call(
                        name: fn_symbol(in),
                        params: [
                          accessor(expr: const_or_var(stmt), field: object(var)),
                          const_or_var(all_rel_vars)
                        ],
                        named_params: []
                      ),
                      body: [
                        if_stmt(
                          else: [
                            assignment_stmt(
                              value: fn_call(
                                name: op_symbol(amp),
                                params: [
                                  seq_expr(
                                    head: [
                                      fn_call(
                                        name: fn_symbol(release),
                                        params: [accessor(expr: const_or_var(stmt), field: object(var))],
                                        named_params: []
                                      )
                                    ]
                                  ),
                                  fn_call(
                                    name: fn_symbol(gen_eval_code),
                                    params: [
                                      accessor(expr: const_or_var(stmt), field: object(value)),
                                      accessor(expr: const_or_var(stmt), field: object(var))
                                    ],
                                    named_params: []
                                  )
                                ],
                                named_params: []
                              ),
                              var: var(code)
                            )
                          ],
                          branches: [
                            (
                              cond: fn_call(
                                name: fn_symbol(in),
                                params: [
                                  accessor(expr: const_or_var(stmt), field: object(var)),
                                  fn_call(
                                    name: fn_symbol(extern_vars),
                                    params: [accessor(expr: const_or_var(stmt), field: object(value))],
                                    named_params: []
                                  )
                                ],
                                named_params: []
                              ),
                              body: [
                                assignment_stmt(
                                  value: fn_call(
                                    name: fn_symbol(lvar),
                                    params: [const_or_var(next_obj_var_id)],
                                    named_params: []
                                  ),
                                  var: var(tmp_var)
                                ),
                                assignment_stmt(
                                  value: fn_call(
                                    name: op_symbol(amp),
                                    params: [
                                      fn_call(
                                        name: fn_symbol(gen_eval_code),
                                        params: [
                                          accessor(expr: const_or_var(stmt), field: object(value)),
                                          const_or_var(tmp_var)
                                        ],
                                        named_params: [
                                          syn_fn_def(
                                            name: fn_symbol(next_obj_var_id),
                                            params: [],
                                            local_fns: [],
                                            expr: fn_call(
                                              name: op_symbol(plus),
                                              params: [const_or_var(next_obj_var_id), object(1)],
                                              named_params: []
                                            )
                                          )
                                        ]
                                      ),
                                      seq_expr(
                                        head: [
                                          fn_call(
                                            name: fn_symbol(release),
                                            params: [accessor(expr: const_or_var(stmt), field: object(var))],
                                            named_params: []
                                          ),
                                          fn_call(
                                            name: fn_symbol(set_var),
                                            params: [
                                              accessor(expr: const_or_var(stmt), field: object(var)),
                                              const_or_var(tmp_var)
                                            ],
                                            named_params: []
                                          )
                                        ]
                                      )
                                    ],
                                    named_params: []
                                  ),
                                  var: var(code)
                                )
                              ]
                            )
                          ]
                        )
                      ]
                    )
                  ]
                ),
                return_stmt(const_or_var(code))
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(assignment_stmt))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_info),
                    params: [accessor(expr: const_or_var(stmt), field: object(cond))],
                    named_params: []
                  ),
                  var: var(cond_info)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: op_symbol(minus),
                    params: [
                      fn_call(
                        name: fn_symbol(new_vars),
                        params: [const_or_var(stmt)],
                        named_params: []
                      ),
                      const_or_var(all_rel_vars)
                    ],
                    named_params: []
                  ),
                  var: var(surv_vars)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_code),
                    params: [
                      accessor(expr: const_or_var(stmt), field: object(body)),
                      const_or_var(res_var),
                      const_or_var(all_rel_vars),
                      const_or_var(break_vars),
                      const_or_var(surv_vars)
                    ],
                    named_params: []
                  ),
                  var: var(if_code)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_code),
                    params: [
                      accessor(expr: const_or_var(stmt), field: object(else)),
                      const_or_var(res_var),
                      const_or_var(all_rel_vars),
                      const_or_var(break_vars),
                      const_or_var(surv_vars)
                    ],
                    named_params: []
                  ),
                  var: var(else_code)
                ),
                assignment_stmt(
                  value: seq_expr(
                    head: [
                      fn_call(
                        name: fn_symbol(check),
                        params: [
                          fn_call(
                            name: fn_symbol(is_bool),
                            params: [
                              accessor(expr: const_or_var(cond_info), field: object(expr))
                            ],
                            named_params: []
                          )
                        ],
                        named_params: []
                      ),
                      fn_call(
                        name: fn_symbol(branch),
                        params: [
                          fn_call(
                            name: fn_symbol(is_true),
                            params: [
                              accessor(expr: const_or_var(cond_info), field: object(expr))
                            ],
                            named_params: []
                          ),
                          const_or_var(if_code),
                          const_or_var(else_code)
                        ],
                        named_params: []
                      )
                    ]
                  ),
                  var: var(branch_code)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      accessor(expr: const_or_var(cond_info), field: object(eval_code)),
                      const_or_var(branch_code)
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(if_stmt)))
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(lvar),
                    params: [const_or_var(next_obj_var_id)],
                    named_params: []
                  ),
                  var: var(tmp_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(ivar),
                    params: [const_or_var(next_int_var_id)],
                    named_params: []
                  ),
                  var: var(start_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(ivar),
                    params: [
                      fn_call(
                        name: op_symbol(plus),
                        params: [const_or_var(next_int_var_id), object(1)],
                        named_params: []
                      )
                    ],
                    named_params: []
                  ),
                  var: var(end_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(ivar),
                    params: [
                      fn_call(
                        name: op_symbol(plus),
                        params: [const_or_var(next_int_var_id), object(2)],
                        named_params: []
                      )
                    ],
                    named_params: []
                  ),
                  var: var(idx_var)
                ),
                let_stmt(
                  body: [
                    assignment_stmt(
                      value: fn_call(
                        name: fn_symbol(gen_eval_code),
                        params: [
                          accessor(expr: const_or_var(stmt), field: object(start_val)),
                          const_or_var(tmp_var)
                        ],
                        named_params: []
                      ),
                      var: var(start_eval_code)
                    ),
                    assignment_stmt(
                      value: fn_call(
                        name: fn_symbol(gen_eval_code),
                        params: [
                          accessor(expr: const_or_var(stmt), field: object(end_val)),
                          const_or_var(tmp_var)
                        ],
                        named_params: []
                      ),
                      var: var(end_eval_code)
                    ),
                    assignment_stmt(
                      value: fn_call(
                        name: fn_symbol(gen_code),
                        params: [
                          accessor(expr: const_or_var(stmt), field: object(body)),
                          const_or_var(res_var),
                          const_or_var(all_rel_vars),
                          set_expr({}),
                          set_expr({})
                        ],
                        named_params: [
                          syn_fn_def(
                            name: fn_symbol(next_int_var_id),
                            params: [],
                            local_fns: [],
                            expr: fn_call(
                              name: op_symbol(plus),
                              params: [const_or_var(next_int_var_id), object(3)],
                              named_params: []
                            )
                          )
                        ]
                      ),
                      var: var(body_code)
                    )
                  ],
                  asgnms: [
                    syn_fn_def(
                      name: fn_symbol(next_obj_var_id),
                      params: [],
                      local_fns: [],
                      expr: fn_call(
                        name: op_symbol(plus),
                        params: [const_or_var(next_obj_var_id), object(1)],
                        named_params: []
                      )
                    )
                  ]
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          fn_call(
                            name: op_symbol(amp),
                            params: [
                              fn_call(
                                name: op_symbol(amp),
                                params: [
                                  const_or_var(start_eval_code),
                                  seq_expr(
                                    head: [
                                      fn_call(
                                        name: fn_symbol(set_ivar),
                                        params: [
                                          const_or_var(idx_var),
                                          fn_call(
                                            name: fn_symbol(get_int_val),
                                            params: [const_or_var(tmp_var)],
                                            named_params: []
                                          )
                                        ],
                                        named_params: []
                                      )
                                    ]
                                  )
                                ],
                                named_params: []
                              ),
                              const_or_var(end_eval_code)
                            ],
                            named_params: []
                          ),
                          seq_expr(
                            head: [
                              fn_call(
                                name: fn_symbol(set_ivar),
                                params: [
                                  const_or_var(end_var),
                                  fn_call(
                                    name: fn_symbol(get_int_val),
                                    params: [const_or_var(tmp_var)],
                                    named_params: []
                                  )
                                ],
                                named_params: []
                              )
                            ]
                          )
                        ],
                        named_params: []
                      ),
                      seq_expr(
                        head: [
                          fn_call(
                            name: fn_symbol(repeat),
                            params: [
                              fn_call(
                                name: op_symbol(amp),
                                params: [
                                  fn_call(
                                    name: op_symbol(amp),
                                    params: [
                                      seq_expr(
                                        head: [
                                          fn_call(
                                            name: fn_symbol(break_if),
                                            params: [
                                              fn_call(
                                                name: fn_symbol(is_gt),
                                                params: [const_or_var(idx_var), const_or_var(end_var)],
                                                named_params: []
                                              )
                                            ],
                                            named_params: []
                                          ),
                                          fn_call(
                                            name: fn_symbol(set_var),
                                            params: [
                                              accessor(expr: const_or_var(stmt), field: object(var)),
                                              fn_call(
                                                name: fn_symbol(to_obj),
                                                params: [const_or_var(idx_var)],
                                                named_params: []
                                              )
                                            ],
                                            named_params: []
                                          )
                                        ]
                                      ),
                                      const_or_var(body_code)
                                    ],
                                    named_params: []
                                  ),
                                  seq_expr(
                                    head: [
                                      fn_call(
                                        name: fn_symbol(increment),
                                        params: [const_or_var(idx_var)],
                                        named_params: []
                                      )
                                    ]
                                  )
                                ],
                                named_params: []
                              )
                            ],
                            named_params: []
                          )
                        ]
                      )
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(for_stmt)))
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(lvar),
                    params: [const_or_var(next_obj_var_id)],
                    named_params: []
                  ),
                  var: var(src_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(ivar),
                    params: [const_or_var(next_int_var_id)],
                    named_params: []
                  ),
                  var: var(idx_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(seq_it_var),
                    params: [const_or_var(next_seq_it_var_id)],
                    named_params: []
                  ),
                  var: var(it_var)
                ),
                assignment_stmt(
                  value: accessor_test(expr: const_or_var(stmt), field: object(idx_var)),
                  var: var(has_idx_var)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_eval_info),
                    params: [
                      accessor(expr: const_or_var(stmt), field: object(values)),
                      const_or_var(src_var)
                    ],
                    named_params: [
                      syn_fn_def(
                        name: fn_symbol(next_obj_var_id),
                        params: [],
                        local_fns: [],
                        expr: fn_call(
                          name: op_symbol(plus),
                          params: [const_or_var(next_obj_var_id), object(1)],
                          named_params: []
                        )
                      )
                    ]
                  ),
                  var: var(src_info)
                ),
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(gen_code),
                    params: [
                      accessor(expr: const_or_var(stmt), field: object(body)),
                      const_or_var(res_var),
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          const_or_var(all_rel_vars),
                          set_expr(
                            {
                              cond_expr(
                                expr: const_or_var(src_var),
                                cond: accessor(expr: const_or_var(src_info), field: object(var_used))
                              )
                            }
                          )
                        ],
                        named_params: []
                      ),
                      set_expr({}),
                      set_expr({})
                    ],
                    named_params: [
                      syn_fn_def(
                        name: fn_symbol(next_obj_var_id),
                        params: [],
                        local_fns: [],
                        expr: fn_call(
                          name: op_symbol(plus),
                          params: [
                            const_or_var(next_obj_var_id),
                            if_expr(
                              else: object(0),
                              branches: [
                                (
                                  expr: object(1),
                                  cond: accessor(expr: const_or_var(src_info), field: object(var_used))
                                )
                              ]
                            )
                          ],
                          named_params: []
                        )
                      ),
                      syn_fn_def(
                        name: fn_symbol(next_int_var_id),
                        params: [],
                        local_fns: [],
                        expr: fn_call(
                          name: op_symbol(plus),
                          params: [
                            const_or_var(next_int_var_id),
                            if_expr(
                              else: object(0),
                              branches: [(expr: object(1), cond: const_or_var(has_idx_var))]
                            )
                          ],
                          named_params: []
                        )
                      ),
                      syn_fn_def(
                        name: fn_symbol(next_seq_it_var_id),
                        params: [],
                        local_fns: [],
                        expr: fn_call(
                          name: op_symbol(plus),
                          params: [const_or_var(next_seq_it_var_id), object(1)],
                          named_params: []
                        )
                      )
                    ]
                  ),
                  var: var(body_code)
                ),
                assignment_stmt(
                  value: seq_expr(
                    head: [
                      fn_call(
                        name: fn_symbol(get_iter),
                        params: [
                          const_or_var(it_var),
                          accessor(expr: const_or_var(src_info), field: object(expr))
                        ],
                        named_params: []
                      ),
                      if_expr(
                        else: const_or_var(no_op),
                        branches: [
                          (
                            expr: fn_call(
                              name: fn_symbol(set_ivar),
                              params: [const_or_var(idx_var), object(0)],
                              named_params: []
                            ),
                            cond: accessor_test(expr: const_or_var(stmt), field: object(idx_var))
                          )
                        ]
                      ),
                      fn_call(
                        name: fn_symbol(repeat),
                        params: [
                          fn_call(
                            name: op_symbol(amp),
                            params: [
                              fn_call(
                                name: op_symbol(amp),
                                params: [
                                  seq_expr(
                                    head: [
                                      fn_call(
                                        name: fn_symbol(break_if),
                                        params: [
                                          fn_call(
                                            name: fn_symbol(is_out_of_range),
                                            params: [const_or_var(it_var)],
                                            named_params: []
                                          )
                                        ],
                                        named_params: []
                                      ),
                                      fn_call(
                                        name: fn_symbol(set_var),
                                        params: [
                                          accessor(expr: const_or_var(stmt), field: object(var)),
                                          fn_call(
                                            name: fn_symbol(get_curr_obj),
                                            params: [const_or_var(it_var)],
                                            named_params: []
                                          )
                                        ],
                                        named_params: []
                                      ),
                                      if_expr(
                                        else: const_or_var(no_op),
                                        branches: [
                                          (
                                            expr: fn_call(
                                              name: fn_symbol(set_var),
                                              params: [
                                                accessor(expr: const_or_var(stmt), field: object(idx_var)),
                                                fn_call(
                                                  name: fn_symbol(to_obj),
                                                  params: [const_or_var(idx_var)],
                                                  named_params: []
                                                )
                                              ],
                                              named_params: []
                                            ),
                                            cond: accessor_test(expr: const_or_var(stmt), field: object(idx_var))
                                          )
                                        ]
                                      )
                                    ]
                                  ),
                                  const_or_var(body_code)
                                ],
                                named_params: []
                              ),
                              seq_expr(
                                head: [
                                  fn_call(
                                    name: fn_symbol(move_forward),
                                    params: [const_or_var(it_var)],
                                    named_params: []
                                  ),
                                  if_expr(
                                    else: const_or_var(no_op),
                                    branches: [
                                      (
                                        expr: fn_call(
                                          name: fn_symbol(increment),
                                          params: [const_or_var(idx_var)],
                                          named_params: []
                                        ),
                                        cond: accessor_test(expr: const_or_var(stmt), field: object(idx_var))
                                      )
                                    ]
                                  )
                                ]
                              )
                            ],
                            named_params: []
                          )
                        ],
                        named_params: []
                      )
                    ]
                  ),
                  var: var(loop_code)
                ),
                return_stmt(
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      fn_call(
                        name: op_symbol(amp),
                        params: [
                          accessor(expr: const_or_var(src_info), field: object(eval_code)),
                          const_or_var(loop_code)
                        ],
                        named_params: []
                      ),
                      accessor(expr: const_or_var(src_info), field: object(cleanup_code))
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(foreach_stmt))
              )
            ]
          )
        ],
        exprs: [fn_par(0), fn_par(1), fn_par(2), fn_par(3)]
      ),
      res_type: seq_type(nonempty: true, elem_type: type_ref(type_symbol(instr)))
    )
  ],
  signatures: [
    syn_sgn(
      name: fn_symbol(next_obj_var_id),
      params: [],
      res_type: type_ref(type_symbol(nat))
    ),
    syn_sgn(
      name: fn_symbol(next_int_var_id),
      params: [],
      res_type: type_ref(type_symbol(nat))
    ),
    syn_sgn(
      name: fn_symbol(next_bool_var_id),
      params: [],
      res_type: type_ref(type_symbol(nat))
    ),
    syn_sgn(
      name: fn_symbol(next_set_it_var_id),
      params: [],
      res_type: type_ref(type_symbol(nat))
    ),
    syn_sgn(
      name: fn_symbol(next_seq_it_var_id),
      params: [],
      res_type: type_ref(type_symbol(nat))
    ),
    syn_sgn(
      name: fn_symbol(next_map_it_var_id),
      params: [],
      res_type: type_ref(type_symbol(nat))
    ),
    syn_sgn(
      name: fn_symbol(next_vector_var_id),
      params: [],
      res_type: type_ref(type_symbol(nat))
    ),
    syn_sgn(
      name: fn_symbol(next_stream_var_id),
      params: [],
      res_type: type_ref(type_symbol(nat))
    )
  ]
)
