syn_fn_def(
  name: fn_symbol(never_falls_through),
  params: [(type: type_ref(type_symbol(synstmt)), var: var(stmt))],
  local_fns: [],
  expr: match_expr(
    cases: [
      case(
        expr: object(true),
        patterns: [
          tag_ptrn(
            obj: type_ptrn(type_any),
            tag: obj_ptrn(object(return_stmt))
          )
        ]
      ),
      case(
        expr: object(true),
        patterns: [obj_ptrn(object(fail_stmt))]
      ),
      case(
        expr: not(
          fn_call(
            name: fn_symbol(has_top_level_break),
            params: [const_or_var(ss)],
            named_params: []
          )
        ),
        patterns: [
          tag_ptrn(
            obj: var_ptrn(name: var(ss)),
            tag: obj_ptrn(object(inf_loop_stmt))
          )
        ]
      ),
      case(
        expr: do_expr(
          [
            for_stmt(
              body: [
                if_stmt(
                  else: [],
                  branches: [
                    (
                      cond: not(
                        fn_call(
                          name: fn_symbol(never_falls_through),
                          params: [accessor(expr: const_or_var(b), field: object(body))],
                          named_params: []
                        )
                      ),
                      body: [return_stmt(object(false))]
                    )
                  ]
                )
              ],
              loops: [
                seq_iter(
                  var: var(b),
                  values: accessor(expr: const_or_var(stmt), field: object(branches))
                )
              ]
            ),
            return_stmt(
              fn_call(
                name: fn_symbol(never_falls_through),
                params: [accessor(expr: const_or_var(stmt), field: object(else))],
                named_params: []
              )
            )
          ]
        ),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(if_stmt)))
        ]
      ),
      case(expr: object(false), patterns: [type_ptrn(type_any)])
    ],
    exprs: [fn_par(0)]
  ),
  res_type: type_ref(type_symbol(bool))
)
