syn_fn_def(
  name: fn_symbol(syn_new_vars),
  params: [(type: type_ref(type_symbol(syniter)), var: var(iter))],
  local_fns: [],
  expr: match_expr(
    cases: [
      case(
        expr: set_expr(
          {
            accessor(expr: const_or_var(iter), field: object(var)),
            cond_expr(
              expr: accessor(expr: const_or_var(iter), field: object(idx_var)),
              cond: accessor_test(expr: const_or_var(iter), field: object(idx_var))
            )
          }
        ),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(seq_iter)))
        ]
      ),
      case(
        expr: set_expr({accessor(expr: const_or_var(iter), field: object(var))}),
        patterns: [
          tag_ptrn(
            obj: type_ptrn(type_any),
            tag: obj_ptrn(object(range_iter))
          )
        ]
      )
    ],
    exprs: [fn_par(0)]
  ),
  res_type: set_type(nonempty: false, elem_type: type_ref(type_symbol(var)))
)
