syn_fn_def(
  name: fn_symbol(ordinary_subexprs),
  params: [(type: type_ref(type_symbol(expr)), var: var(expr))],
  local_fns: [],
  expr: match_expr(
    cases: [
      case(
        expr: set_expr({}),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(object)))
        ]
      ),
      case(
        expr: fn_call(
          name: op_symbol(amp),
          params: [
            fn_call(
              name: fn_symbol(union),
              params: [
                set_comp(
                  sel_exprs: [],
                  source: [
                    in_clause(
                      src: fn_call(
                        name: fn_symbol(set),
                        params: [accessor(expr: const_or_var(expr), field: object(head))],
                        named_params: []
                      ),
                      ptrn: var_ptrn(name: var(e))
                    )
                  ],
                  expr: fn_call(
                    name: fn_symbol(subexprs),
                    params: [const_or_var(e)],
                    named_params: []
                  )
                )
              ],
              named_params: []
            ),
            set_expr(
              {
                cond_expr(
                  expr: accessor(expr: const_or_var(expr), field: object(tail)),
                  cond: accessor_test(expr: const_or_var(expr), field: object(tail))
                )
              }
            )
          ],
          named_params: []
        ),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(seq_expr)))
        ]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(union),
          params: [
            set_comp(
              sel_exprs: [],
              source: [
                in_clause(src: const_or_var(ses), ptrn: var_ptrn(name: var(e)))
              ],
              expr: fn_call(
                name: fn_symbol(subexprs),
                params: [const_or_var(e)],
                named_params: []
              )
            )
          ],
          named_params: []
        ),
        patterns: [
          tag_ptrn(
            obj: var_ptrn(name: var(ses)),
            tag: obj_ptrn(object(set_expr))
          )
        ]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(union),
          params: [
            set_comp(
              sel_exprs: [],
              source: [
                in_clause(src: const_or_var(es), ptrn: var_ptrn(name: var(e)))
              ],
              expr: set_expr(
                {
                  accessor(expr: const_or_var(e), field: object(value)),
                  accessor(expr: const_or_var(e), field: object(key)),
                  cond_expr(
                    expr: accessor(expr: const_or_var(e), field: object(cond)),
                    cond: accessor_test(expr: const_or_var(e), field: object(cond))
                  )
                }
              )
            )
          ],
          named_params: []
        ),
        patterns: [
          tag_ptrn(
            obj: var_ptrn(name: var(es)),
            tag: obj_ptrn(object(map_expr))
          )
        ]
      ),
      case(
        expr: set_expr(
          {
            accessor(expr: const_or_var(expr), field: object(obj)),
            accessor(expr: const_or_var(expr), field: object(tag))
          }
        ),
        patterns: [
          tag_ptrn(
            obj: type_ptrn(type_any),
            tag: obj_ptrn(object(tag_obj_expr))
          )
        ]
      ),
      case(
        expr: set_expr({}),
        patterns: [type_ptrn(type_ref(type_symbol(var)))]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(set),
          params: [accessor(expr: const_or_var(expr), field: object(params))],
          named_params: []
        ),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(fn_call)))
        ]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(set),
          params: [accessor(expr: const_or_var(expr), field: object(params))],
          named_params: []
        ),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(cls_call)))
        ]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(set),
          params: [accessor(expr: const_or_var(expr), field: object(params))],
          named_params: []
        ),
        patterns: [
          tag_ptrn(
            obj: type_ptrn(type_any),
            tag: obj_ptrn(object(builtin_call))
          )
        ]
      ),
      case(
        expr: set_expr(
          {
            accessor(expr: const_or_var(expr), field: object(left)),
            accessor(expr: const_or_var(expr), field: object(right))
          }
        ),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(and_expr)))
        ]
      ),
      case(
        expr: set_expr(
          {
            accessor(expr: const_or_var(expr), field: object(left)),
            accessor(expr: const_or_var(expr), field: object(right))
          }
        ),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(or_expr)))
        ]
      ),
      case(
        expr: set_expr({const_or_var(e)}),
        patterns: [
          tag_ptrn(
            obj: var_ptrn(name: var(e)),
            tag: obj_ptrn(object(not_expr))
          )
        ]
      ),
      case(
        expr: set_expr(
          {
            accessor(expr: const_or_var(expr), field: object(left)),
            accessor(expr: const_or_var(expr), field: object(right))
          }
        ),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(eq)))
        ]
      ),
      case(
        expr: set_expr({accessor(expr: const_or_var(expr), field: object(obj))}),
        patterns: [
          tag_ptrn(
            obj: type_ptrn(type_any),
            tag: obj_ptrn(object(membership))
          )
        ]
      ),
      case(
        expr: set_expr({accessor(expr: const_or_var(expr), field: object(expr))}),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(accessor)))
        ]
      ),
      case(
        expr: set_expr({accessor(expr: const_or_var(expr), field: object(expr))}),
        patterns: [
          tag_ptrn(
            obj: type_ptrn(type_any),
            tag: obj_ptrn(object(accessor_test))
          )
        ]
      ),
      case(
        expr: set_expr(
          {
            accessor(expr: const_or_var(expr), field: object(cond)),
            accessor(expr: const_or_var(expr), field: object(else)),
            accessor(expr: const_or_var(expr), field: object(then))
          }
        ),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(if_expr)))
        ]
      ),
      case(
        expr: set_expr({}),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(ex_qual)))
        ]
      ),
      case(
        expr: set_expr({}),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(set_comp)))
        ]
      ),
      case(
        expr: set_expr({}),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(map_comp)))
        ]
      ),
      case(
        expr: set_expr(
          {
            accessor(expr: const_or_var(expr), field: object(src_expr))
          }
        ),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(seq_comp)))
        ]
      ),
      case(
        expr: set_expr(
          {
            accessor(expr: const_or_var(expr), field: object(src_expr))
          }
        ),
        patterns: [
          tag_ptrn(
            obj: type_ptrn(type_any),
            tag: obj_ptrn(object(select_expr))
          )
        ]
      ),
      case(
        expr: set_expr(
          {
            accessor(expr: const_or_var(expr), field: object(src_expr))
          }
        ),
        patterns: [
          tag_ptrn(
            obj: type_ptrn(type_any),
            tag: obj_ptrn(object(replace_expr))
          )
        ]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(set),
          params: [accessor(expr: const_or_var(expr), field: object(exprs))],
          named_params: []
        ),
        patterns: [
          tag_ptrn(
            obj: type_ptrn(type_any),
            tag: obj_ptrn(object(match_expr))
          )
        ]
      ),
      case(
        expr: set_expr({}),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(do_expr)))
        ]
      )
    ],
    exprs: [fn_par(0)]
  ),
  res_type: set_type(nonempty: false, elem_type: type_ref(type_symbol(expr)))
)
