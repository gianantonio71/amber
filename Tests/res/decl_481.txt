syn_fn_def(
  name: fn_symbol(gen_type_checking_expr),
  params: [
    (type: type_ref(type_symbol(type)), var: var(type)),
    (type: type_ref(type_symbol(atomicexpr)), var: var(obj))
  ],
  local_fns: [],
  expr: match_expr(
    cases: [
      case(expr: object(true), patterns: [obj_ptrn(object(type_any))]),
      case(
        expr: fn_call(
          name: fn_symbol(is_symb),
          params: [const_or_var(obj)],
          named_params: []
        ),
        patterns: [obj_ptrn(object(atom_type))]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(is_eq),
          params: [const_or_var(s), const_or_var(obj)],
          named_params: []
        ),
        patterns: [
          tag_ptrn(
            obj: var_ptrn(name: var(s)),
            tag: obj_ptrn(object(symb_type))
          )
        ]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(is_int),
          params: [const_or_var(obj)],
          named_params: []
        ),
        patterns: [obj_ptrn(object(integer))]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(and_then),
          params: [
            fn_call(
              name: fn_symbol(is_int),
              params: [const_or_var(obj)],
              named_params: []
            ),
            fn_call(
              name: fn_symbol(is_le),
              params: [
                fn_call(
                  name: fn_symbol(get_int_val),
                  params: [const_or_var(obj)],
                  named_params: []
                ),
                accessor(expr: const_or_var(type), field: object(max))
              ],
              named_params: []
            )
          ],
          named_params: []
        ),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(low_ints)))
        ]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(and_then),
          params: [
            fn_call(
              name: fn_symbol(is_int),
              params: [const_or_var(obj)],
              named_params: []
            ),
            fn_call(
              name: fn_symbol(is_ge),
              params: [
                fn_call(
                  name: fn_symbol(get_int_val),
                  params: [const_or_var(obj)],
                  named_params: []
                ),
                accessor(expr: const_or_var(type), field: object(min))
              ],
              named_params: []
            )
          ],
          named_params: []
        ),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(high_ints)))
        ]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(and_then),
          params: [
            fn_call(
              name: fn_symbol(is_int),
              params: [const_or_var(obj)],
              named_params: []
            ),
            fn_call(
              name: fn_symbol(is_ge),
              params: [
                fn_call(
                  name: fn_symbol(get_int_val),
                  params: [const_or_var(obj)],
                  named_params: []
                ),
                accessor(expr: const_or_var(type), field: object(min))
              ],
              named_params: []
            ),
            fn_call(
              name: fn_symbol(is_le),
              params: [
                fn_call(
                  name: fn_symbol(get_int_val),
                  params: [const_or_var(obj)],
                  named_params: []
                ),
                fn_call(
                  name: fn_symbol(max),
                  params: [const_or_var(type)],
                  named_params: []
                )
              ],
              named_params: []
            )
          ],
          named_params: []
        ),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(int_range)))
        ]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(eval_bool_fn),
          params: [
            tag_obj_expr(obj: const_or_var(ts), tag: object(memb_test)),
            seq_expr(head: [const_or_var(obj)])
          ],
          named_params: []
        ),
        patterns: [
          tag_ptrn(
            obj: var_ptrn(name: var(ts)),
            tag: obj_ptrn(object(type_ref))
          )
        ]
      ),
      case(
        expr: object(true),
        patterns: [
          tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(type_var)))
        ]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(is_eq),
          params: [const_or_var(obj), const_or_var(empty_seq)],
          named_params: []
        ),
        patterns: [obj_ptrn(object(empty_seq_type))]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(is_eq),
          params: [const_or_var(obj), const_or_var(empty_seq)],
          named_params: []
        ),
        patterns: [obj_ptrn(object(empty_set_type))]
      ),
      case(
        expr: fn_call(
          name: fn_symbol(is_eq),
          params: [const_or_var(obj), const_or_var(empty_map)],
          named_params: []
        ),
        patterns: [obj_ptrn(object(empty_map_type))]
      )
    ],
    exprs: [fn_par(0), fn_par(1)]
  ),
  res_type: type_ref(type_symbol(boolexpr))
)
