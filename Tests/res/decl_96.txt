syn_fn_def(
  name: fn_symbol(to_int),
  params: [(type: type_ref(type_symbol(string)), var: var(str))],
  local_fns: [],
  expr: do_expr(
    [
      assert_stmt(
        fn_call(
          name: op_symbol(greater),
          params: [
            fn_call(
              name: fn_symbol(length),
              params: [const_or_var(str)],
              named_params: []
            ),
            object(0)
          ],
          named_params: []
        )
      ),
      assignment_stmt(value: object(0), var: var(res)),
      assignment_stmt(value: object(false), var: var(neg)),
      for_stmt(
        body: [
          if_stmt(
            else: [
              assignment_stmt(
                value: fn_call(
                  name: op_symbol(minus),
                  params: [const_or_var(ch), object(48)],
                  named_params: []
                ),
                var: var(code)
              ),
              assert_stmt(
                and(
                  left: fn_call(
                    name: op_symbol(greater_eq),
                    params: [const_or_var(code), object(0)],
                    named_params: []
                  ),
                  right: fn_call(
                    name: op_symbol(lower_eq),
                    params: [const_or_var(code), object(9)],
                    named_params: []
                  )
                )
              ),
              assignment_stmt(
                value: fn_call(
                  name: op_symbol(plus),
                  params: [
                    fn_call(
                      name: op_symbol(star),
                      params: [object(10), const_or_var(res)],
                      named_params: []
                    ),
                    const_or_var(code)
                  ],
                  named_params: []
                ),
                var: var(res)
              )
            ],
            branches: [
              (
                cond: and(
                  left: eq(left: const_or_var(ch), right: const_or_var(ascii_minus)),
                  right: eq(left: const_or_var(i), right: object(0))
                ),
                body: [
                  assignment_stmt(value: object(true), var: var(neg)),
                  assert_stmt(
                    fn_call(
                      name: op_symbol(greater),
                      params: [
                        fn_call(
                          name: fn_symbol(length),
                          params: [const_or_var(str)],
                          named_params: []
                        ),
                        object(1)
                      ],
                      named_params: []
                    )
                  )
                ]
              )
            ]
          )
        ],
        loops: [
          seq_iter(
            var: var(ch),
            values: fn_call(
              name: fn_symbol(untag),
              params: [const_or_var(str)],
              named_params: []
            ),
            idx_var: var(i)
          )
        ]
      ),
      return_stmt(
        if_expr(
          else: const_or_var(res),
          branches: [
            (
              expr: fn_call(
                name: op_symbol(minus),
                params: [const_or_var(res)],
                named_params: []
              ),
              cond: const_or_var(neg)
            )
          ]
        )
      )
    ]
  ),
  res_type: type_ref(type_symbol(int))
)
