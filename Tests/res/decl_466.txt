syn_fn_def(
  name: fn_symbol(merge_fns),
  params: [
    (
      type: set_type(nonempty: true, elem_type: type_ref(type_symbol(fndef))),
      var: var(fds)
    )
  ],
  local_fns: [
    syn_fn_def(
      name: fn_symbol(mk_ptrn),
      params: [(var: var(param))],
      local_fns: [],
      expr: do_expr(
        [
          assignment_stmt(
            value: tag_obj_expr(
              obj: if_expr(
                else: object(type_any),
                branches: [
                  (
                    expr: accessor(expr: const_or_var(param), field: object(type)),
                    cond: accessor_test(expr: const_or_var(param), field: object(type))
                  )
                ]
              ),
              tag: object(type_ptrn)
            ),
            var: var(ptrn)
          ),
          if_stmt(
            else: [],
            branches: [
              (
                cond: accessor_test(expr: const_or_var(param), field: object(var)),
                body: [
                  assignment_stmt(
                    value: tag_obj_expr(
                      obj: map_expr(
                        {
                          (value: const_or_var(ptrn), key: object(ptrn)),
                          (
                            value: accessor(expr: const_or_var(param), field: object(var)),
                            key: object(name)
                          )
                        }
                      ),
                      tag: object(var_ptrn)
                    ),
                    var: var(ptrn)
                  )
                ]
              )
            ]
          ),
          return_stmt(const_or_var(ptrn))
        ]
      )
    )
  ],
  expr: do_expr(
    [
      assert_stmt(
        fn_call(
          name: op_symbol(greater),
          params: [
            fn_call(
              name: fn_symbol(size),
              params: [const_or_var(fds)],
              named_params: []
            ),
            object(1)
          ],
          named_params: []
        )
      ),
      assignment_stmt(value: seq_expr(head: []), var: var(cases)),
      for_stmt(
        body: [
          assignment_stmt(
            value: seq_comp(
              var: var(p),
              expr: fn_call(
                name: fn_symbol(mk_ptrn),
                params: [const_or_var(p)],
                named_params: []
              ),
              src_expr: accessor(expr: const_or_var(fd), field: object(params))
            ),
            var: var(ptrns)
          ),
          assignment_stmt(
            value: map_expr(
              {
                (value: const_or_var(ptrns), key: object(ptrns)),
                (
                  value: accessor(expr: const_or_var(fd), field: object(expr)),
                  key: object(expr)
                )
              }
            ),
            var: var(case)
          ),
          assignment_stmt(
            value: seq_expr(head: [const_or_var(case)], tail: const_or_var(cases)),
            var: var(cases)
          )
        ],
        loops: [
          seq_iter(
            var: var(fd),
            values: fn_call(
              name: fn_symbol(rand_sort),
              params: [const_or_var(fds)],
              named_params: []
            )
          )
        ]
      ),
      assignment_stmt(
        value: fn_call(
          name: fn_symbol(rand_elem),
          params: [const_or_var(fds)],
          named_params: []
        ),
        var: var(rand_fd)
      ),
      assignment_stmt(
        value: accessor(expr: const_or_var(rand_fd), field: object(name)),
        var: var(name)
      ),
      assignment_stmt(
        value: fn_call(
          name: fn_symbol(arity),
          params: [const_or_var(rand_fd)],
          named_params: []
        ),
        var: var(arity)
      ),
      assignment_stmt(
        value: accessor(expr: const_or_var(rand_fd), field: object(named_params)),
        var: var(named_params)
      ),
      assignment_stmt(
        value: tag_obj_expr(
          obj: map_expr(
            {
              (value: const_or_var(cases), key: object(cases)),
              (
                value: seq_comp(
                  var: var(i),
                  expr: fn_call(
                    name: fn_symbol(fn_par),
                    params: [const_or_var(i)],
                    named_params: []
                  ),
                  src_expr: fn_call(
                    name: fn_symbol(inc_seq),
                    params: [const_or_var(arity)],
                    named_params: []
                  )
                ),
                key: object(exprs)
              )
            }
          ),
          tag: object(match_expr)
        ),
        var: var(new_expr)
      ),
      return_stmt(
        tag_obj_expr(
          obj: map_expr(
            {
              (value: const_or_var(name), key: object(name)),
              (
                value: const_or_var(named_params),
                key: object(named_params)
              ),
              (value: const_or_var(new_expr), key: object(expr)),
              (
                value: fn_call(
                  name: fn_symbol(rep_seq),
                  params: [const_or_var(arity), map_expr({})],
                  named_params: []
                ),
                key: object(params)
              )
            }
          ),
          tag: object(fn_def)
        )
      )
    ]
  ),
  res_type: type_ref(type_symbol(fndef))
)
