typedef(
  type: union_type(
    {
      symb_type(object(fail_stmt)),
      symb_type(object(break_stmt)),
      tag_type(
        obj_type: type_ref(type_symbol(synexpr)),
        tag_type: symb_type(object(return_stmt))
      ),
      tag_type(
        obj_type: type_ref(type_symbol(synexpr)),
        tag_type: symb_type(object(assert_stmt))
      ),
      tag_type(
        obj_type: type_ref(type_symbol(synexpr)),
        tag_type: symb_type(object(print_stmt))
      ),
      tag_type(
        obj_type: seq_type(nonempty: true, elem_type: type_ref(type_symbol(synstmt))),
        tag_type: symb_type(object(inf_loop_stmt))
      ),
      tag_type(
        obj_type: tuple_type(
          {
            (
              type: type_ref(type_symbol(var)),
              optional: false,
              label: object(var)
            ),
            (
              type: type_ref(type_symbol(synexpr)),
              optional: false,
              label: object(value)
            )
          }
        ),
        tag_type: symb_type(object(assignment_stmt))
      ),
      tag_type(
        obj_type: tuple_type(
          {
            (
              type: seq_type(nonempty: true, elem_type: type_ref(type_symbol(synstmt))),
              optional: false,
              label: object(body)
            ),
            (
              type: seq_type(nonempty: true, elem_type: type_ref(type_symbol(syniter))),
              optional: false,
              label: object(loops)
            )
          }
        ),
        tag_type: symb_type(object(for_stmt))
      ),
      tag_type(
        obj_type: tuple_type(
          {
            (
              type: type_ref(type_symbol(bool)),
              optional: false,
              label: object(skip_first)
            ),
            (
              type: type_ref(type_symbol(synexpr)),
              optional: false,
              label: object(cond)
            ),
            (
              type: seq_type(nonempty: true, elem_type: type_ref(type_symbol(synstmt))),
              optional: false,
              label: object(body)
            )
          }
        ),
        tag_type: symb_type(object(loop_stmt))
      ),
      tag_type(
        obj_type: tuple_type(
          {
            (
              type: seq_type(nonempty: true, elem_type: type_ref(type_symbol(synstmt))),
              optional: false,
              label: object(body)
            ),
            (
              type: seq_type(nonempty: true, elem_type: type_ref(type_symbol(synfndef))),
              optional: false,
              label: object(asgnms)
            )
          }
        ),
        tag_type: symb_type(object(let_stmt))
      ),
      tag_type(
        obj_type: tuple_type(
          {
            (
              type: seq_type(nonempty: false, elem_type: type_ref(type_symbol(synstmt))),
              optional: false,
              label: object(else)
            ),
            (
              type: seq_type(
                nonempty: true,
                elem_type: tuple_type(
                  {
                    (
                      type: type_ref(type_symbol(synexpr)),
                      optional: false,
                      label: object(cond)
                    ),
                    (
                      type: seq_type(nonempty: true, elem_type: type_ref(type_symbol(synstmt))),
                      optional: false,
                      label: object(body)
                    )
                  }
                )
              ),
              optional: false,
              label: object(branches)
            )
          }
        ),
        tag_type: symb_type(object(if_stmt))
      )
    }
  ),
  name: type_symbol(synstmt)
)
