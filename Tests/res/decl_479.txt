syn_fn_def(
  name: fn_symbol(mk_named_type_memb_test_fn),
  params: [
    (
      type: type_ref(type_symbol(typesymbol)),
      var: var(type_name)
    ),
    (
      type: map_type(
        value_type: type_ref(type_symbol(type)),
        key_type: type_ref(type_symbol(typesymbol))
      ),
      var: var(typedefs)
    )
  ],
  local_fns: [],
  expr: do_expr(
    [
      assignment_stmt(
        value: fn_call(
          name: fn_symbol(bvar),
          params: [object(0)],
          named_params: []
        ),
        var: var(res_var)
      ),
      assignment_stmt(
        value: fn_call(
          name: fn_symbol(gen_type_checking_code),
          params: [
            fn_call(
              name: op_symbol(brackets),
              params: [const_or_var(typedefs), const_or_var(type_name)],
              named_params: []
            ),
            fn_call(
              name: fn_symbol(fn_par),
              params: [object(0)],
              named_params: []
            ),
            const_or_var(res_var)
          ],
          named_params: [
            syn_fn_def(
              name: fn_symbol(next_set_it_var_id),
              params: [],
              local_fns: [],
              expr: object(0)
            ),
            syn_fn_def(
              name: fn_symbol(next_seq_it_var_id),
              params: [],
              local_fns: [],
              expr: object(0)
            ),
            syn_fn_def(
              name: fn_symbol(next_map_it_var_id),
              params: [],
              local_fns: [],
              expr: object(0)
            ),
            syn_fn_def(
              name: fn_symbol(next_obj_var_id),
              params: [],
              local_fns: [],
              expr: object(0)
            ),
            syn_fn_def(
              name: fn_symbol(next_int_var_id),
              params: [],
              local_fns: [],
              expr: object(0)
            )
          ]
        ),
        var: var(code)
      ),
      return_stmt(
        fn_call(
          name: fn_symbol(bool_proc_def),
          params: [
            tag_obj_expr(obj: const_or_var(type_name), tag: object(memb_test)),
            object(1),
            fn_call(
              name: op_symbol(amp),
              params: [
                const_or_var(code),
                seq_expr(
                  head: [
                    fn_call(
                      name: fn_symbol(ret_val),
                      params: [const_or_var(res_var)],
                      named_params: []
                    )
                  ]
                )
              ],
              named_params: []
            )
          ],
          named_params: []
        )
      )
    ]
  ),
  res_type: type_ref(type_symbol(boolprocdef))
)
