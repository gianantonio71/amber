syn_fn_def(
  name: fn_symbol(lower_than),
  params: [
    (type: type_ref(type_symbol(atom)), var: var(a1)),
    (type: type_ref(type_symbol(atom)), var: var(a2))
  ],
  local_fns: [],
  expr: do_expr(
    [
      assignment_stmt(
        value: builtin_call(name: str, params: [const_or_var(a1)]),
        var: var(str1)
      ),
      assignment_stmt(
        value: builtin_call(name: str, params: [const_or_var(a2)]),
        var: var(str2)
      ),
      assignment_stmt(
        value: fn_call(
          name: fn_symbol(length),
          params: [const_or_var(str1)],
          named_params: []
        ),
        var: var(len1)
      ),
      assignment_stmt(
        value: fn_call(
          name: fn_symbol(length),
          params: [const_or_var(str2)],
          named_params: []
        ),
        var: var(len2)
      ),
      if_stmt(
        else: [],
        branches: [
          (
            cond: neq(left: const_or_var(len1), right: const_or_var(len2)),
            body: [
              return_stmt(
                membership(
                  type: type_ref(type_symbol(nznat)),
                  obj: fn_call(
                    name: op_symbol(minus),
                    params: [const_or_var(len2), const_or_var(len1)],
                    named_params: []
                  )
                )
              )
            ]
          )
        ]
      ),
      for_stmt(
        body: [
          assignment_stmt(
            value: fn_call(
              name: op_symbol(brackets),
              params: [const_or_var(str2), const_or_var(i)],
              named_params: []
            ),
            var: var(ch2)
          ),
          if_stmt(
            else: [],
            branches: [
              (
                cond: neq(left: const_or_var(ch1), right: const_or_var(ch2)),
                body: [
                  return_stmt(
                    membership(
                      type: type_ref(type_symbol(nznat)),
                      obj: fn_call(
                        name: op_symbol(minus),
                        params: [const_or_var(ch2), const_or_var(ch1)],
                        named_params: []
                      )
                    )
                  )
                ]
              )
            ]
          )
        ],
        loops: [
          seq_iter(
            var: var(ch1),
            values: fn_call(
              name: fn_symbol(untag),
              params: [const_or_var(str1)],
              named_params: []
            ),
            idx_var: var(i)
          )
        ]
      ),
      fail_stmt
    ]
  ),
  res_type: type_ref(type_symbol(bool))
)
