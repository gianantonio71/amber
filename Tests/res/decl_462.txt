using_block(
  fn_defs: [
    syn_fn_def(
      name: fn_symbol(expr_is_wf),
      params: [
        (type: type_ref(type_symbol(expr)), var: var(expr)),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(var))),
          var: var(scalar_vars)
        )
      ],
      local_fns: [
        syn_fn_def(
          name: fn_symbol(rest_is_wf),
          params: [(var: var(expr)), (var: var(scalar_vars))],
          local_fns: [],
          expr: match_expr(
            cases: [
              case(
                expr: fn_call(
                  name: fn_symbol(in),
                  params: [const_or_var(expr), const_or_var(scalar_vars)],
                  named_params: []
                ),
                patterns: [type_ptrn(type_ref(type_symbol(var)))]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(fn_call_is_wf),
                  params: [
                    const_or_var(expr),
                    const_or_var(fns_in_scope),
                    const_or_var(scalar_vars)
                  ],
                  named_params: []
                ),
                patterns: [
                  tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(fn_call)))
                ]
              ),
              case(
                expr: and(
                  left: fn_call(
                    name: fn_symbol(has_key),
                    params: [
                      const_or_var(cls_vars),
                      accessor(expr: const_or_var(expr), field: object(name))
                    ],
                    named_params: []
                  ),
                  right: eq(
                    left: fn_call(
                      name: op_symbol(brackets),
                      params: [
                        const_or_var(cls_vars),
                        accessor(expr: const_or_var(expr), field: object(name))
                      ],
                      named_params: []
                    ),
                    right: fn_call(
                      name: fn_symbol(length),
                      params: [accessor(expr: const_or_var(expr), field: object(params))],
                      named_params: []
                    )
                  )
                ),
                patterns: [
                  tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(cls_call)))
                ]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(arity_is_correct),
                  params: [
                    accessor(expr: const_or_var(expr), field: object(name)),
                    fn_call(
                      name: fn_symbol(length),
                      params: [accessor(expr: const_or_var(expr), field: object(params))],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                patterns: [
                  tag_ptrn(
                    obj: type_ptrn(type_any),
                    tag: obj_ptrn(object(builtin_call))
                  )
                ]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(type_is_wf),
                  params: [
                    accessor(expr: const_or_var(expr), field: object(type)),
                    const_or_var(type_vars)
                  ],
                  named_params: []
                ),
                patterns: [
                  tag_ptrn(
                    obj: type_ptrn(type_any),
                    tag: obj_ptrn(object(membership))
                  )
                ]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(clause_is_wf),
                  params: [
                    accessor(expr: const_or_var(expr), field: object(source)),
                    const_or_var(scalar_vars)
                  ],
                  named_params: []
                ),
                patterns: [
                  tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(ex_qual)))
                ]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(clause_is_wf),
                  params: [
                    accessor(expr: const_or_var(expr), field: object(source)),
                    const_or_var(scalar_vars)
                  ],
                  named_params: []
                ),
                patterns: [
                  tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(set_comp)))
                ]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(clause_is_wf),
                  params: [
                    accessor(expr: const_or_var(expr), field: object(source)),
                    const_or_var(scalar_vars)
                  ],
                  named_params: []
                ),
                patterns: [
                  tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(map_comp)))
                ]
              ),
              case(
                expr: and(
                  left: or(
                    left: not(
                      accessor_test(expr: const_or_var(expr), field: object(idx_var))
                    ),
                    right: neq(
                      left: accessor(expr: const_or_var(expr), field: object(var)),
                      right: accessor(expr: const_or_var(expr), field: object(idx_var))
                    )
                  ),
                  right: fn_call(
                    name: fn_symbol(disjoint),
                    params: [
                      fn_call(
                        name: fn_symbol(gen_vars),
                        params: [const_or_var(expr)],
                        named_params: []
                      ),
                      const_or_var(scalar_vars)
                    ],
                    named_params: []
                  )
                ),
                patterns: [
                  tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(seq_comp)))
                ]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(all),
                  params: [
                    seq_comp(
                      var: var(c),
                      expr: fn_call(
                        name: fn_symbol(case_is_wf),
                        params: [
                          const_or_var(c),
                          const_or_var(scalar_vars),
                          fn_call(
                            name: fn_symbol(length),
                            params: [accessor(expr: const_or_var(expr), field: object(exprs))],
                            named_params: []
                          )
                        ],
                        named_params: []
                      ),
                      src_expr: accessor(expr: const_or_var(expr), field: object(cases))
                    )
                  ],
                  named_params: []
                ),
                patterns: [
                  tag_ptrn(
                    obj: type_ptrn(type_any),
                    tag: obj_ptrn(object(match_expr))
                  )
                ]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(stmts_are_wf),
                  params: [const_or_var(ss), const_or_var(scalar_vars)],
                  named_params: []
                ),
                patterns: [
                  tag_ptrn(
                    obj: var_ptrn(name: var(ss)),
                    tag: obj_ptrn(object(do_expr))
                  )
                ]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(ptrn_is_wf),
                  params: [
                    accessor(expr: const_or_var(expr), field: object(ptrn)),
                    const_or_var(scalar_vars)
                  ],
                  named_params: []
                ),
                patterns: [
                  tag_ptrn(
                    obj: type_ptrn(type_any),
                    tag: obj_ptrn(object(select_expr))
                  )
                ]
              ),
              case(
                expr: fn_call(
                  name: fn_symbol(ptrn_is_wf),
                  params: [
                    accessor(expr: const_or_var(expr), field: object(ptrn)),
                    const_or_var(scalar_vars)
                  ],
                  named_params: []
                ),
                patterns: [
                  tag_ptrn(
                    obj: type_ptrn(type_any),
                    tag: obj_ptrn(object(replace_expr))
                  )
                ]
              ),
              case(expr: object(true), patterns: [type_ptrn(type_any)])
            ],
            exprs: [fn_par(0), fn_par(1)]
          )
        )
      ],
      expr: do_expr(
        [
          if_stmt(
            else: [],
            branches: [
              (
                cond: ex_qual(
                  sel_exprs: [
                    not(
                      fn_call(
                        name: fn_symbol(expr_is_wf),
                        params: [const_or_var(e), const_or_var(scalar_vars)],
                        named_params: []
                      )
                    )
                  ],
                  source: [
                    in_clause(
                      src: fn_call(
                        name: fn_symbol(ordinary_subexprs),
                        params: [const_or_var(expr)],
                        named_params: []
                      ),
                      ptrn: var_ptrn(name: var(e))
                    )
                  ]
                ),
                body: [return_stmt(object(false))]
              )
            ]
          ),
          assignment_stmt(
            value: fn_call(
              name: op_symbol(amp),
              params: [
                const_or_var(scalar_vars),
                fn_call(
                  name: fn_symbol(gen_vars),
                  params: [const_or_var(expr)],
                  named_params: []
                )
              ],
              named_params: []
            ),
            var: var(gvs)
          ),
          if_stmt(
            else: [],
            branches: [
              (
                cond: ex_qual(
                  sel_exprs: [
                    not(
                      fn_call(
                        name: fn_symbol(expr_is_wf),
                        params: [const_or_var(e), const_or_var(gvs)],
                        named_params: []
                      )
                    )
                  ],
                  source: [
                    in_clause(
                      src: fn_call(
                        name: fn_symbol(special_subexprs),
                        params: [const_or_var(expr)],
                        named_params: []
                      ),
                      ptrn: var_ptrn(name: var(e))
                    )
                  ]
                ),
                body: [return_stmt(object(false))]
              )
            ]
          ),
          return_stmt(
            fn_call(
              name: fn_symbol(rest_is_wf),
              params: [const_or_var(expr), const_or_var(scalar_vars)],
              named_params: []
            )
          )
        ]
      ),
      res_type: type_ref(type_symbol(tautology))
    ),
    syn_fn_def(
      name: fn_symbol(fn_call_is_wf),
      params: [
        (type: type_ref(type_symbol(expr)), var: var(fn_call)),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(fndef))),
          var: var(fndefs)
        ),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(var))),
          var: var(scalar_vars)
        )
      ],
      local_fns: [
        syn_fn_def(
          name: fn_symbol(could_match),
          params: [
            (type: type_ref(type_symbol(expr)), var: var(fn_call)),
            (type: type_ref(type_symbol(fndef)), var: var(fndef)),
            (
              type: set_type(nonempty: false, elem_type: type_ref(type_symbol(var))),
              var: var(scalar_vars)
            )
          ],
          local_fns: [],
          expr: do_expr(
            [
              if_stmt(
                else: [],
                branches: [
                  (
                    cond: neq(
                      left: accessor(expr: const_or_var(fn_call), field: object(name)),
                      right: accessor(expr: const_or_var(fndef), field: object(name))
                    ),
                    body: [return_stmt(object(false))]
                  )
                ]
              ),
              if_stmt(
                else: [],
                branches: [
                  (
                    cond: neq(
                      left: fn_call(
                        name: fn_symbol(length),
                        params: [
                          accessor(expr: const_or_var(fn_call), field: object(params))
                        ],
                        named_params: []
                      ),
                      right: fn_call(
                        name: fn_symbol(arity),
                        params: [const_or_var(fndef)],
                        named_params: []
                      )
                    ),
                    body: [return_stmt(object(false))]
                  )
                ]
              ),
              for_stmt(
                body: [
                  assignment_stmt(
                    value: fn_call(
                      name: op_symbol(brackets),
                      params: [
                        accessor(expr: const_or_var(fn_call), field: object(params)),
                        const_or_var(i)
                      ],
                      named_params: []
                    ),
                    var: var(actual_par)
                  ),
                  assignment_stmt(
                    value: fn_call(
                      name: op_symbol(brackets),
                      params: [
                        accessor(expr: const_or_var(fndef), field: object(params)),
                        const_or_var(i)
                      ],
                      named_params: []
                    ),
                    var: var(formal_par)
                  ),
                  if_stmt(
                    else: [
                      if_stmt(
                        else: [],
                        branches: [
                          (
                            cond: neq(
                              left: fn_call(
                                name: fn_symbol(arity),
                                params: [const_or_var(actual_par)],
                                named_params: []
                              ),
                              right: object(0)
                            ),
                            body: [return_stmt(object(false))]
                          )
                        ]
                      )
                    ],
                    branches: [
                      (
                        cond: accessor_test(expr: const_or_var(formal_par), field: object(type)),
                        body: [
                          if_stmt(
                            else: [],
                            branches: [
                              (
                                cond: neq(
                                  left: fn_call(
                                    name: fn_symbol(arity),
                                    params: [const_or_var(actual_par)],
                                    named_params: []
                                  ),
                                  right: fn_call(
                                    name: fn_symbol(arity),
                                    params: [
                                      accessor(expr: const_or_var(formal_par), field: object(type))
                                    ],
                                    named_params: []
                                  )
                                ),
                                body: [return_stmt(object(false))]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                ],
                loops: [
                  seq_iter(
                    var: var(i),
                    values: fn_call(
                      name: fn_symbol(indexes),
                      params: [
                        accessor(expr: const_or_var(fn_call), field: object(params))
                      ],
                      named_params: []
                    )
                  )
                ]
              ),
              for_stmt(
                body: [
                  assignment_stmt(
                    value: fn_call(
                      name: fn_symbol(arity),
                      params: [
                        fn_call(
                          name: op_symbol(brackets),
                          params: [
                            accessor(expr: const_or_var(fndef), field: object(named_params)),
                            const_or_var(v)
                          ],
                          named_params: []
                        )
                      ],
                      named_params: []
                    ),
                    var: var(par_arity)
                  ),
                  if_stmt(
                    else: [return_stmt(object(false))],
                    branches: [
                      (
                        cond: fn_call(
                          name: fn_symbol(has_key),
                          params: [
                            accessor(expr: const_or_var(fn_call), field: object(named_params)),
                            const_or_var(v)
                          ],
                          named_params: []
                        ),
                        body: [
                          if_stmt(
                            else: [],
                            branches: [
                              (
                                cond: neq(
                                  left: fn_call(
                                    name: fn_symbol(arity),
                                    params: [
                                      fn_call(
                                        name: op_symbol(brackets),
                                        params: [
                                          accessor(expr: const_or_var(fn_call), field: object(named_params)),
                                          const_or_var(v)
                                        ],
                                        named_params: []
                                      )
                                    ],
                                    named_params: []
                                  ),
                                  right: const_or_var(par_arity)
                                ),
                                body: [return_stmt(object(false))]
                              )
                            ]
                          )
                        ]
                      ),
                      (
                        cond: fn_call(
                          name: fn_symbol(has_key),
                          params: [const_or_var(cls_vars), const_or_var(v)],
                          named_params: []
                        ),
                        body: [
                          if_stmt(
                            else: [],
                            branches: [
                              (
                                cond: neq(
                                  left: fn_call(
                                    name: op_symbol(brackets),
                                    params: [const_or_var(cls_vars), const_or_var(v)],
                                    named_params: []
                                  ),
                                  right: const_or_var(par_arity)
                                ),
                                body: [return_stmt(object(false))]
                              )
                            ]
                          )
                        ]
                      ),
                      (
                        cond: fn_call(
                          name: fn_symbol(in),
                          params: [const_or_var(v), const_or_var(scalar_vars)],
                          named_params: []
                        ),
                        body: [
                          if_stmt(
                            else: [],
                            branches: [
                              (
                                cond: neq(left: const_or_var(par_arity), right: object(0)),
                                body: [return_stmt(object(false))]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                ],
                loops: [
                  seq_iter(
                    var: var(v),
                    values: fn_call(
                      name: fn_symbol(keys),
                      params: [
                        accessor(expr: const_or_var(fndef), field: object(named_params))
                      ],
                      named_params: []
                    )
                  )
                ]
              ),
              return_stmt(object(true))
            ]
          ),
          res_type: type_ref(type_symbol(bool))
        )
      ],
      expr: do_expr(
        [
          return_stmt(
            ex_qual(
              sel_exprs: [
                fn_call(
                  name: fn_symbol(could_match),
                  params: [
                    const_or_var(fn_call),
                    const_or_var(fd),
                    const_or_var(scalar_vars)
                  ],
                  named_params: []
                )
              ],
              source: [
                in_clause(src: const_or_var(fndefs), ptrn: var_ptrn(name: var(fd)))
              ]
            )
          )
        ]
      ),
      res_type: type_ref(type_symbol(bool))
    ),
    syn_fn_def(
      name: fn_symbol(case_is_wf),
      params: [
        (
          type: union_type(
            {
              tuple_type(
                {
                  (
                    type: type_ref(type_symbol(expr)),
                    optional: false,
                    label: object(expr)
                  ),
                  (
                    type: seq_type(nonempty: true, elem_type: type_ref(type_symbol(pattern))),
                    optional: false,
                    label: object(ptrns)
                  )
                }
              )
            }
          ),
          var: var(case)
        ),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(var))),
          var: var(scalar_vars)
        ),
        (type: type_ref(type_symbol(nznat)), var: var(arg_count))
      ],
      local_fns: [],
      expr: do_expr(
        [
          if_stmt(
            else: [],
            branches: [
              (
                cond: neq(
                  left: fn_call(
                    name: fn_symbol(length),
                    params: [accessor(expr: const_or_var(case), field: object(ptrns))],
                    named_params: []
                  ),
                  right: const_or_var(arg_count)
                ),
                body: [return_stmt(object(false))]
              )
            ]
          ),
          assignment_stmt(value: const_or_var(scalar_vars), var: var(vs)),
          for_stmt(
            body: [
              assignment_stmt(
                value: fn_call(
                  name: fn_symbol(new_vars),
                  params: [const_or_var(p)],
                  named_params: []
                ),
                var: var(pvs)
              ),
              if_stmt(
                else: [],
                branches: [
                  (
                    cond: or(
                      left: not(
                        fn_call(
                          name: fn_symbol(disjoint),
                          params: [const_or_var(pvs), const_or_var(vs)],
                          named_params: []
                        )
                      ),
                      right: not(
                        fn_call(
                          name: fn_symbol(ptrn_is_wf),
                          params: [const_or_var(p), set_expr({})],
                          named_params: []
                        )
                      )
                    ),
                    body: [return_stmt(object(false))]
                  )
                ]
              ),
              if_stmt(
                else: [],
                branches: [
                  (
                    cond: membership(
                      type: union_type(
                        {
                          tag_type(
                            obj_type: tuple_type(
                              {
                                (
                                  type: type_ref(type_symbol(var)),
                                  optional: false,
                                  label: object(name)
                                )
                              }
                            ),
                            tag_type: symb_type(object(var_ptrn))
                          )
                        }
                      ),
                      obj: const_or_var(p)
                    ),
                    body: [return_stmt(object(false))]
                  )
                ]
              ),
              assignment_stmt(
                value: fn_call(
                  name: op_symbol(amp),
                  params: [const_or_var(vs), const_or_var(pvs)],
                  named_params: []
                ),
                var: var(vs)
              )
            ],
            loops: [
              seq_iter(
                var: var(p),
                values: accessor(expr: const_or_var(case), field: object(ptrns))
              )
            ]
          ),
          return_stmt(
            fn_call(
              name: fn_symbol(expr_is_wf),
              params: [
                accessor(expr: const_or_var(case), field: object(expr)),
                const_or_var(vs)
              ],
              named_params: []
            )
          )
        ]
      ),
      res_type: type_ref(type_symbol(tautology))
    ),
    syn_fn_def(
      name: fn_symbol(clause_is_wf),
      params: [
        (type: type_ref(type_symbol(clause)), var: var(clause)),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(var))),
          var: var(ext_vars)
        )
      ],
      local_fns: [],
      expr: match_expr(
        cases: [
          case(
            expr: and(
              left: fn_call(
                name: fn_symbol(ptrn_is_wf),
                params: [
                  accessor(expr: const_or_var(clause), field: object(ptrn)),
                  const_or_var(ext_vars)
                ],
                named_params: []
              ),
              right: fn_call(
                name: fn_symbol(expr_is_wf),
                params: [
                  accessor(expr: const_or_var(clause), field: object(src)),
                  const_or_var(ext_vars)
                ],
                named_params: []
              )
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(in_clause)))
            ]
          ),
          case(
            expr: and(
              left: fn_call(
                name: fn_symbol(ptrn_is_wf),
                params: [
                  accessor(expr: const_or_var(clause), field: object(ptrn)),
                  const_or_var(ext_vars)
                ],
                named_params: []
              ),
              right: fn_call(
                name: fn_symbol(expr_is_wf),
                params: [
                  accessor(expr: const_or_var(clause), field: object(src)),
                  const_or_var(ext_vars)
                ],
                named_params: []
              )
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(not_in_clause))
              )
            ]
          ),
          case(
            expr: and(
              left: and(
                left: fn_call(
                  name: fn_symbol(ptrn_is_wf),
                  params: [
                    accessor(expr: const_or_var(clause), field: object(key_ptrn)),
                    const_or_var(ext_vars)
                  ],
                  named_params: []
                ),
                right: fn_call(
                  name: fn_symbol(ptrn_is_wf),
                  params: [
                    accessor(expr: const_or_var(clause), field: object(value_ptrn)),
                    const_or_var(ext_vars)
                  ],
                  named_params: []
                )
              ),
              right: fn_call(
                name: fn_symbol(expr_is_wf),
                params: [
                  accessor(expr: const_or_var(clause), field: object(src)),
                  const_or_var(ext_vars)
                ],
                named_params: []
              )
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(map_in_clause))
              )
            ]
          ),
          case(
            expr: and(
              left: and(
                left: fn_call(
                  name: fn_symbol(ptrn_is_wf),
                  params: [
                    accessor(expr: const_or_var(clause), field: object(key_ptrn)),
                    const_or_var(ext_vars)
                  ],
                  named_params: []
                ),
                right: fn_call(
                  name: fn_symbol(ptrn_is_wf),
                  params: [
                    accessor(expr: const_or_var(clause), field: object(value_ptrn)),
                    const_or_var(ext_vars)
                  ],
                  named_params: []
                )
              ),
              right: fn_call(
                name: fn_symbol(expr_is_wf),
                params: [
                  accessor(expr: const_or_var(clause), field: object(src)),
                  const_or_var(ext_vars)
                ],
                named_params: []
              )
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(map_not_in_clause))
              )
            ]
          ),
          case(
            expr: and(
              left: fn_call(
                name: fn_symbol(clause_is_wf),
                params: [
                  accessor(expr: const_or_var(clause), field: object(left)),
                  const_or_var(ext_vars)
                ],
                named_params: []
              ),
              right: fn_call(
                name: fn_symbol(clause_is_wf),
                params: [
                  accessor(expr: const_or_var(clause), field: object(right)),
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      const_or_var(ext_vars),
                      fn_call(
                        name: fn_symbol(new_vars),
                        params: [accessor(expr: const_or_var(clause), field: object(left))],
                        named_params: []
                      )
                    ],
                    named_params: []
                  )
                ],
                named_params: []
              )
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(and_clause))
              )
            ]
          ),
          case(
            expr: and(
              left: fn_call(
                name: fn_symbol(clause_is_wf),
                params: [
                  accessor(expr: const_or_var(clause), field: object(left)),
                  const_or_var(ext_vars)
                ],
                named_params: []
              ),
              right: fn_call(
                name: fn_symbol(clause_is_wf),
                params: [
                  accessor(expr: const_or_var(clause), field: object(right)),
                  const_or_var(ext_vars)
                ],
                named_params: []
              )
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(or_clause)))
            ]
          )
        ],
        exprs: [fn_par(0), fn_par(1)]
      ),
      res_type: type_ref(type_symbol(tautology))
    ),
    syn_fn_def(
      name: fn_symbol(ptrn_is_wf),
      params: [
        (type: type_ref(type_symbol(pattern)), var: var(ptrn)),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(var))),
          var: var(ext_vars)
        )
      ],
      local_fns: [],
      expr: match_expr(
        cases: [
          case(
            expr: object(true),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(obj_ptrn)))
            ]
          ),
          case(
            expr: fn_call(
              name: fn_symbol(type_is_wf),
              params: [const_or_var(t), set_expr({})],
              named_params: []
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(t)),
                tag: obj_ptrn(object(type_ptrn))
              )
            ]
          ),
          case(
            expr: fn_call(
              name: fn_symbol(in),
              params: [const_or_var(v), const_or_var(ext_vars)],
              named_params: []
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(v)),
                tag: obj_ptrn(object(ext_var_ptrn))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                if_stmt(
                  else: [],
                  branches: [
                    (
                      cond: fn_call(
                        name: fn_symbol(in),
                        params: [
                          accessor(expr: const_or_var(ptrn), field: object(name)),
                          const_or_var(ext_vars)
                        ],
                        named_params: []
                      ),
                      body: [return_stmt(object(false))]
                    )
                  ]
                ),
                if_stmt(
                  else: [],
                  branches: [
                    (
                      cond: not(
                        accessor_test(expr: const_or_var(ptrn), field: object(ptrn))
                      ),
                      body: [return_stmt(object(true))]
                    )
                  ]
                ),
                return_stmt(
                  and(
                    left: not(
                      fn_call(
                        name: fn_symbol(in),
                        params: [
                          accessor(expr: const_or_var(ptrn), field: object(name)),
                          fn_call(
                            name: fn_symbol(new_vars),
                            params: [accessor(expr: const_or_var(ptrn), field: object(ptrn))],
                            named_params: []
                          )
                        ],
                        named_params: []
                      )
                    ),
                    right: fn_call(
                      name: fn_symbol(ptrn_is_wf),
                      params: [
                        accessor(expr: const_or_var(ptrn), field: object(ptrn)),
                        const_or_var(ext_vars)
                      ],
                      named_params: []
                    )
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(var_ptrn)))
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: fn_call(
                    name: fn_symbol(apply),
                    params: [accessor(expr: const_or_var(ptrn), field: object(fields))],
                    named_params: [
                      syn_fn_def(
                        name: fn_symbol(f),
                        params: [(var: var(b))],
                        local_fns: [],
                        expr: accessor(expr: const_or_var(b), field: object(label))
                      )
                    ]
                  ),
                  var: var(ls)
                ),
                if_stmt(
                  else: [],
                  branches: [
                    (
                      cond: ex_qual(
                        sel_exprs: [
                          fn_call(
                            name: op_symbol(greater),
                            params: [const_or_var(c), object(1)],
                            named_params: []
                          )
                        ],
                        source: [
                          map_in_clause(
                            src: const_or_var(ls),
                            value_ptrn: var_ptrn(name: var(c)),
                            key_ptrn: var_ptrn(name: var(l))
                          )
                        ]
                      ),
                      body: [return_stmt(object(false))]
                    )
                  ]
                ),
                assignment_stmt(
                  value: accessor(expr: const_or_var(ptrn), field: object(fields)),
                  var: var(fs)
                ),
                if_stmt(
                  else: [],
                  branches: [
                    (
                      cond: ex_qual(
                        sel_exprs: [
                          not(
                            fn_call(
                              name: fn_symbol(ptrn_is_wf),
                              params: [
                                accessor(expr: const_or_var(b), field: object(ptrn)),
                                const_or_var(ext_vars)
                              ],
                              named_params: []
                            )
                          )
                        ],
                        source: [
                          in_clause(src: const_or_var(fs), ptrn: var_ptrn(name: var(b)))
                        ]
                      ),
                      body: [return_stmt(object(false))]
                    )
                  ]
                ),
                return_stmt(
                  not(
                    ex_qual(
                      sel_exprs: [
                        neq(left: const_or_var(b1), right: const_or_var(b2)),
                        not(
                          fn_call(
                            name: fn_symbol(disjoint),
                            params: [
                              fn_call(
                                name: fn_symbol(new_vars),
                                params: [accessor(expr: const_or_var(b1), field: object(ptrn))],
                                named_params: []
                              ),
                              fn_call(
                                name: fn_symbol(new_vars),
                                params: [accessor(expr: const_or_var(b2), field: object(ptrn))],
                                named_params: []
                              )
                            ],
                            named_params: []
                          )
                        )
                      ],
                      source: [
                        in_clause(src: const_or_var(fs), ptrn: var_ptrn(name: var(b1))),
                        in_clause(src: const_or_var(fs), ptrn: var_ptrn(name: var(b2)))
                      ]
                    )
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(tuple_ptrn))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                if_stmt(
                  else: [],
                  branches: [
                    (
                      cond: membership(
                        type: union_type(
                          {
                            tag_type(
                              obj_type: type_ref(type_symbol(any)),
                              tag_type: symb_type(object(var_ptrn))
                            )
                          }
                        ),
                        obj: accessor(expr: const_or_var(ptrn), field: object(tag))
                      ),
                      body: [
                        if_stmt(
                          else: [],
                          branches: [
                            (
                              cond: fn_call(
                                name: fn_symbol(in),
                                params: [
                                  accessor(
                                    expr: accessor(expr: const_or_var(ptrn), field: object(tag)),
                                    field: object(name)
                                  ),
                                  fn_call(
                                    name: fn_symbol(new_vars),
                                    params: [accessor(expr: const_or_var(ptrn), field: object(obj))],
                                    named_params: []
                                  )
                                ],
                                named_params: []
                              ),
                              body: [return_stmt(object(false))]
                            )
                          ]
                        )
                      ]
                    )
                  ]
                ),
                return_stmt(
                  fn_call(
                    name: fn_symbol(ptrn_is_wf),
                    params: [
                      accessor(expr: const_or_var(ptrn), field: object(obj)),
                      const_or_var(ext_vars)
                    ],
                    named_params: []
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(tag_ptrn)))
            ]
          )
        ],
        exprs: [fn_par(0), fn_par(1)]
      ),
      res_type: type_ref(type_symbol(tautology))
    ),
    syn_fn_def(
      name: fn_symbol(stmts_are_wf),
      params: [
        (
          type: seq_type(
            nonempty: true,
            elem_type: type_ref(type_symbol(statement))
          ),
          var: var(stmts)
        ),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(var))),
          var: var(scalar_vars)
        )
      ],
      local_fns: [],
      expr: fn_call(
        name: fn_symbol(stmts_are_wf),
        params: [
          const_or_var(stmts),
          const_or_var(scalar_vars),
          object(false),
          object(true)
        ],
        named_params: []
      ),
      res_type: type_ref(type_symbol(tautology))
    ),
    syn_fn_def(
      name: fn_symbol(stmts_are_wf),
      params: [
        (
          type: seq_type(
            nonempty: true,
            elem_type: type_ref(type_symbol(statement))
          ),
          var: var(stmts)
        ),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(var))),
          var: var(scalar_vars)
        ),
        (
          type: type_ref(type_symbol(bool)),
          var: var(is_inside_loop)
        ),
        (type: type_ref(type_symbol(bool)), var: var(needs_return))
      ],
      local_fns: [],
      expr: do_expr(
        [
          assignment_stmt(value: const_or_var(scalar_vars), var: var(vs)),
          assignment_stmt(value: object(true), var: var(reachable)),
          for_stmt(
            body: [
              if_stmt(
                else: [],
                branches: [
                  (
                    cond: or(
                      left: not(const_or_var(reachable)),
                      right: not(
                        fn_call(
                          name: fn_symbol(stmt_is_wf),
                          params: [
                            const_or_var(s),
                            const_or_var(vs),
                            const_or_var(is_inside_loop)
                          ],
                          named_params: []
                        )
                      )
                    ),
                    body: [return_stmt(object(false))]
                  )
                ]
              ),
              assignment_stmt(
                value: fn_call(
                  name: op_symbol(amp),
                  params: [
                    const_or_var(vs),
                    fn_call(
                      name: fn_symbol(new_vars),
                      params: [const_or_var(s)],
                      named_params: []
                    )
                  ],
                  named_params: []
                ),
                var: var(vs)
              ),
              assignment_stmt(
                value: and(
                  left: const_or_var(reachable),
                  right: not(
                    fn_call(
                      name: fn_symbol(is_last_for_sure),
                      params: [const_or_var(s)],
                      named_params: []
                    )
                  )
                ),
                var: var(reachable)
              )
            ],
            loops: [
              seq_iter(var: var(s), values: const_or_var(stmts), idx_var: var(i))
            ]
          ),
          return_stmt(
            or(
              left: not(const_or_var(needs_return)),
              right: not(const_or_var(reachable))
            )
          )
        ]
      ),
      res_type: type_ref(type_symbol(tautology))
    ),
    syn_fn_def(
      name: fn_symbol(stmt_is_wf),
      params: [
        (type: type_ref(type_symbol(statement)), var: var(stmt)),
        (
          type: set_type(nonempty: false, elem_type: type_ref(type_symbol(var))),
          var: var(scalar_vars)
        ),
        (
          type: type_ref(type_symbol(bool)),
          var: var(is_inside_loop)
        )
      ],
      local_fns: [],
      expr: match_expr(
        cases: [
          case(
            expr: fn_call(
              name: fn_symbol(expr_is_wf),
              params: [
                accessor(expr: const_or_var(stmt), field: object(value)),
                const_or_var(scalar_vars)
              ],
              named_params: []
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(assignment_stmt))
              )
            ]
          ),
          case(
            expr: fn_call(
              name: fn_symbol(expr_is_wf),
              params: [const_or_var(e), const_or_var(scalar_vars)],
              named_params: []
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(e)),
                tag: obj_ptrn(object(return_stmt))
              )
            ]
          ),
          case(
            expr: const_or_var(is_inside_loop),
            patterns: [obj_ptrn(object(break_stmt))]
          ),
          case(
            expr: object(true),
            patterns: [obj_ptrn(object(fail_stmt))]
          ),
          case(
            expr: fn_call(
              name: fn_symbol(expr_is_wf),
              params: [const_or_var(e), const_or_var(scalar_vars)],
              named_params: []
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(e)),
                tag: obj_ptrn(object(assert_stmt))
              )
            ]
          ),
          case(
            expr: fn_call(
              name: fn_symbol(expr_is_wf),
              params: [const_or_var(e), const_or_var(scalar_vars)],
              named_params: []
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(e)),
                tag: obj_ptrn(object(print_stmt))
              )
            ]
          ),
          case(
            expr: and(
              left: and(
                left: fn_call(
                  name: fn_symbol(expr_is_wf),
                  params: [
                    accessor(expr: const_or_var(stmt), field: object(cond)),
                    const_or_var(scalar_vars)
                  ],
                  named_params: []
                ),
                right: fn_call(
                  name: fn_symbol(stmts_are_wf),
                  params: [
                    accessor(expr: const_or_var(stmt), field: object(body)),
                    const_or_var(scalar_vars),
                    const_or_var(is_inside_loop),
                    object(false)
                  ],
                  named_params: []
                )
              ),
              right: or(
                left: eq(
                  left: accessor(expr: const_or_var(stmt), field: object(else)),
                  right: seq_expr(head: [])
                ),
                right: fn_call(
                  name: fn_symbol(stmts_are_wf),
                  params: [
                    accessor(expr: const_or_var(stmt), field: object(else)),
                    const_or_var(scalar_vars),
                    const_or_var(is_inside_loop),
                    object(false)
                  ],
                  named_params: []
                )
              )
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(if_stmt)))
            ]
          ),
          case(
            expr: and(
              left: not(
                ex_qual(
                  sel_exprs: [
                    not(
                      fn_call(
                        name: fn_symbol(expr_is_wf),
                        params: [const_or_var(e), const_or_var(scalar_vars)],
                        named_params: []
                      )
                    )
                  ],
                  source: [
                    map_in_clause(
                      src: accessor(expr: const_or_var(stmt), field: object(asgnms)),
                      value_ptrn: var_ptrn(name: var(e)),
                      key_ptrn: type_ptrn(type_any)
                    )
                  ]
                )
              ),
              right: fn_call(
                name: fn_symbol(stmts_are_wf),
                params: [
                  accessor(expr: const_or_var(stmt), field: object(body)),
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      const_or_var(scalar_vars),
                      set_comp(
                        sel_exprs: [],
                        source: [
                          map_in_clause(
                            src: accessor(expr: const_or_var(stmt), field: object(asgnms)),
                            value_ptrn: var_ptrn(name: var(e), ptrn: type_ptrn(type_ref(type_symbol(expr)))),
                            key_ptrn: var_ptrn(name: var(v))
                          )
                        ],
                        expr: const_or_var(v)
                      )
                    ],
                    named_params: []
                  ),
                  const_or_var(is_inside_loop),
                  object(false)
                ],
                named_params: [
                  syn_fn_def(
                    name: fn_symbol(cls_vars),
                    params: [],
                    local_fns: [],
                    expr: fn_call(
                      name: op_symbol(amp),
                      params: [
                        const_or_var(cls_vars),
                        map_comp(
                          sel_exprs: [],
                          source: [
                            map_in_clause(
                              src: accessor(expr: const_or_var(stmt), field: object(asgnms)),
                              value_ptrn: var_ptrn(
                                name: var(e),
                                ptrn: type_ptrn(type_ref(type_symbol(clsexpr)))
                              ),
                              key_ptrn: var_ptrn(name: var(v))
                            )
                          ],
                          value_expr: fn_call(
                            name: fn_symbol(length),
                            params: [accessor(expr: const_or_var(e), field: object(params))],
                            named_params: []
                          ),
                          key_expr: const_or_var(v)
                        )
                      ],
                      named_params: []
                    )
                  )
                ]
              )
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(let_stmt)))
            ]
          ),
          case(
            expr: fn_call(
              name: fn_symbol(stmts_are_wf),
              params: [
                const_or_var(ss),
                const_or_var(scalar_vars),
                object(true),
                object(false)
              ],
              named_params: []
            ),
            patterns: [
              tag_ptrn(
                obj: var_ptrn(name: var(ss)),
                tag: obj_ptrn(object(loop_stmt))
              )
            ]
          ),
          case(
            expr: do_expr(
              [
                assignment_stmt(
                  value: set_expr(
                    {
                      accessor(expr: const_or_var(stmt), field: object(var)),
                      cond_expr(
                        expr: accessor(expr: const_or_var(stmt), field: object(idx_var)),
                        cond: accessor_test(expr: const_or_var(stmt), field: object(idx_var))
                      )
                    }
                  ),
                  var: var(nvs)
                ),
                return_stmt(
                  and(
                    left: and(
                      left: fn_call(
                        name: fn_symbol(disjoint),
                        params: [const_or_var(nvs), const_or_var(scalar_vars)],
                        named_params: []
                      ),
                      right: fn_call(
                        name: fn_symbol(expr_is_wf),
                        params: [
                          accessor(expr: const_or_var(stmt), field: object(values)),
                          const_or_var(scalar_vars)
                        ],
                        named_params: []
                      )
                    ),
                    right: fn_call(
                      name: fn_symbol(stmts_are_wf),
                      params: [
                        accessor(expr: const_or_var(stmt), field: object(body)),
                        fn_call(
                          name: op_symbol(amp),
                          params: [const_or_var(scalar_vars), const_or_var(nvs)],
                          named_params: []
                        ),
                        object(true),
                        object(false)
                      ],
                      named_params: []
                    )
                  )
                )
              ]
            ),
            patterns: [
              tag_ptrn(
                obj: type_ptrn(type_any),
                tag: obj_ptrn(object(foreach_stmt))
              )
            ]
          ),
          case(
            expr: and(
              left: and(
                left: and(
                  left: not(
                    fn_call(
                      name: fn_symbol(in),
                      params: [
                        accessor(expr: const_or_var(stmt), field: object(var)),
                        const_or_var(scalar_vars)
                      ],
                      named_params: []
                    )
                  ),
                  right: fn_call(
                    name: fn_symbol(expr_is_wf),
                    params: [
                      accessor(expr: const_or_var(stmt), field: object(start_val)),
                      const_or_var(scalar_vars)
                    ],
                    named_params: []
                  )
                ),
                right: fn_call(
                  name: fn_symbol(expr_is_wf),
                  params: [
                    accessor(expr: const_or_var(stmt), field: object(end_val)),
                    const_or_var(scalar_vars)
                  ],
                  named_params: []
                )
              ),
              right: fn_call(
                name: fn_symbol(stmts_are_wf),
                params: [
                  accessor(expr: const_or_var(stmt), field: object(body)),
                  fn_call(
                    name: op_symbol(amp),
                    params: [
                      const_or_var(scalar_vars),
                      set_expr({accessor(expr: const_or_var(stmt), field: object(var))})
                    ],
                    named_params: []
                  ),
                  object(true),
                  object(false)
                ],
                named_params: []
              )
            ),
            patterns: [
              tag_ptrn(obj: type_ptrn(type_any), tag: obj_ptrn(object(for_stmt)))
            ]
          )
        ],
        exprs: [fn_par(0), fn_par(1), fn_par(2)]
      ),
      res_type: type_ref(type_symbol(tautology))
    )
  ],
  signatures: [
    syn_sgn(
      name: fn_symbol(typedefs),
      params: [],
      res_type: map_type(
        value_type: type_ref(type_symbol(type)),
        key_type: type_ref(type_symbol(typesymbol))
      )
    ),
    syn_sgn(
      name: fn_symbol(type_vars),
      params: [],
      res_type: set_type(nonempty: false, elem_type: type_ref(type_symbol(typevar)))
    ),
    syn_sgn(
      name: fn_symbol(fns_in_scope),
      params: [],
      res_type: set_type(nonempty: false, elem_type: type_ref(type_symbol(fndef)))
    ),
    syn_sgn(
      name: fn_symbol(cls_vars),
      params: [],
      res_type: map_type(
        value_type: type_ref(type_symbol(nznat)),
        key_type: type_ref(type_symbol(var))
      )
    )
  ]
)
