typedef(
  type: union_type(
    {
      tag_type(
        obj_type: tuple_type(
          {
            (
              type: type_ref(type_symbol(var)),
              optional: false,
              label: object(var)
            ),
            (
              type: type_ref(type_symbol(var)),
              optional: true,
              label: object(idx_var)
            ),
            (
              type: type_ref(type_symbol(synexpr)),
              optional: false,
              label: object(values)
            )
          }
        ),
        tag_type: symb_type(object(seq_iter))
      ),
      tag_type(
        obj_type: tuple_type(
          {
            (
              type: type_ref(type_symbol(var)),
              optional: false,
              label: object(var)
            ),
            (
              type: type_ref(type_symbol(synexpr)),
              optional: false,
              label: object(end_val)
            ),
            (
              type: type_ref(type_symbol(synexpr)),
              optional: false,
              label: object(start_val)
            )
          }
        ),
        tag_type: symb_type(object(range_iter))
      )
    }
  ),
  name: type_symbol(syniter)
)
